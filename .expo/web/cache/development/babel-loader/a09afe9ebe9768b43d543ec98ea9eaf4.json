{"ast":null,"code":"export default (function (matrix, size) {\n  var cellSize = size / matrix.length;\n  var path = '';\n  matrix.forEach(function (row, i) {\n    var needDraw = false;\n    row.forEach(function (column, j) {\n      if (column) {\n        if (!needDraw) {\n          path += \"M\" + cellSize * j + \" \" + (cellSize / 2 + cellSize * i) + \" \";\n          needDraw = true;\n        }\n\n        if (needDraw && j === matrix.length - 1) {\n          path += \"L\" + cellSize * (j + 1) + \" \" + (cellSize / 2 + cellSize * i) + \" \";\n        }\n      } else {\n        if (needDraw) {\n          path += \"L\" + cellSize * j + \" \" + (cellSize / 2 + cellSize * i) + \" \";\n          needDraw = false;\n        }\n      }\n    });\n  });\n  return {\n    cellSize: cellSize,\n    path: path\n  };\n});","map":{"version":3,"names":["matrix","size","cellSize","length","path","forEach","row","i","needDraw","column","j"],"sources":["C:/Users/DELL/Documents/ReactNative/Smartendance/node_modules/react-native-qrcode-svg/src/transformMatrixIntoPath.js"],"sourcesContent":["export default (matrix, size) => {\n  const cellSize = size / matrix.length\n  let path = ''\n  matrix.forEach((row, i) => {\n    let needDraw = false\n    row.forEach((column, j) => {\n      if (column) {\n        if (!needDraw) {\n          path += `M${cellSize * j} ${cellSize / 2 + cellSize * i} `\n          needDraw = true\n        }\n        if (needDraw && j === matrix.length - 1) {\n          path += `L${cellSize * (j + 1)} ${cellSize / 2 + cellSize * i} `\n        }\n      } else {\n        if (needDraw) {\n          path += `L${cellSize * j} ${cellSize / 2 + cellSize * i} `\n          needDraw = false\n        }\n      }\n    })\n  })\n  return {\n    cellSize,\n    path\n  }\n}\n"],"mappings":"AAAA,gBAAe,UAACA,MAAD,EAASC,IAAT,EAAkB;EAC/B,IAAMC,QAAQ,GAAGD,IAAI,GAAGD,MAAM,CAACG,MAA/B;EACA,IAAIC,IAAI,GAAG,EAAX;EACAJ,MAAM,CAACK,OAAP,CAAe,UAACC,GAAD,EAAMC,CAAN,EAAY;IACzB,IAAIC,QAAQ,GAAG,KAAf;IACAF,GAAG,CAACD,OAAJ,CAAY,UAACI,MAAD,EAASC,CAAT,EAAe;MACzB,IAAID,MAAJ,EAAY;QACV,IAAI,CAACD,QAAL,EAAe;UACbJ,IAAI,UAAQF,QAAQ,GAAGQ,CAAnB,UAAwBR,QAAQ,GAAG,CAAX,GAAeA,QAAQ,GAAGK,CAAlD,OAAJ;UACAC,QAAQ,GAAG,IAAX;QACD;;QACD,IAAIA,QAAQ,IAAIE,CAAC,KAAKV,MAAM,CAACG,MAAP,GAAgB,CAAtC,EAAyC;UACvCC,IAAI,UAAQF,QAAQ,IAAIQ,CAAC,GAAG,CAAR,CAAhB,UAA8BR,QAAQ,GAAG,CAAX,GAAeA,QAAQ,GAAGK,CAAxD,OAAJ;QACD;MACF,CARD,MAQO;QACL,IAAIC,QAAJ,EAAc;UACZJ,IAAI,UAAQF,QAAQ,GAAGQ,CAAnB,UAAwBR,QAAQ,GAAG,CAAX,GAAeA,QAAQ,GAAGK,CAAlD,OAAJ;UACAC,QAAQ,GAAG,KAAX;QACD;MACF;IACF,CAfD;EAgBD,CAlBD;EAmBA,OAAO;IACLN,QAAQ,EAARA,QADK;IAELE,IAAI,EAAJA;EAFK,CAAP;AAID,CA1BD"},"metadata":{},"sourceType":"module"}