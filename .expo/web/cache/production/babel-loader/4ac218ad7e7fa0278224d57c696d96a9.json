{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import RNDrawerLayoutAndroid from\"react-native-web/dist/exports/DrawerLayoutAndroid\";import RNFlatList from\"react-native-web/dist/exports/FlatList\";import RNSwitch from\"react-native-web/dist/exports/Switch\";import RNTextInput from\"react-native-web/dist/exports/TextInput\";import RNScrollView from\"react-native-web/dist/exports/ScrollView\";import createNativeWrapper from\"../handlers/createNativeWrapper\";export var ScrollView=createNativeWrapper(RNScrollView,{disallowInterruption:true});export var Switch=createNativeWrapper(RNSwitch,{shouldCancelWhenOutside:false,shouldActivateOnStart:true,disallowInterruption:true});export var TextInput=createNativeWrapper(RNTextInput);export var DrawerLayoutAndroid=createNativeWrapper(RNDrawerLayoutAndroid,{disallowInterruption:true});DrawerLayoutAndroid.positions=RNDrawerLayoutAndroid.positions;export var FlatList=React.forwardRef(function(props,ref){return React.createElement(RNFlatList,_extends({ref:ref},props,{renderScrollComponent:function renderScrollComponent(scrollProps){return React.createElement(ScrollView,scrollProps);}}));});","map":{"version":3,"sources":["GestureComponents.web.tsx"],"names":["ScrollView","createNativeWrapper","disallowInterruption","Switch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","DrawerLayoutAndroid","RNDrawerLayoutAndroid","FlatList","ref","scrollProps"],"mappings":"uRAAA,MAAO,GAAP,MAAA,KAAA,OAAA,C,mVAUA,MAAA,oBAAA,uCAEA,MAAO,IAAMA,WAAU,CAAGC,mBAAmB,CAAA,YAAA,CAAe,CAC1DC,oBAAoB,CAAE,IADoC,CAAf,CAAtC,CAIP,MAAO,IAAMC,OAAM,CAAGF,mBAAmB,CAAA,QAAA,CAAW,CAClDG,uBAAuB,CAD2B,KAAA,CAElDC,qBAAqB,CAF6B,IAAA,CAGlDH,oBAAoB,CAAE,IAH4B,CAAX,CAAlC,CAKP,MAAO,IAAMI,UAAS,CAAGL,mBAAmB,CAArC,WAAqC,CAArC,CACP,MAAO,IAAMM,oBAAmB,CAAGN,mBAAmB,CAAA,qBAAA,CAAwB,CAC5EC,oBAAoB,CAAE,IADsD,CAAxB,CAA/C,CAIPK,mBAAmB,CAAnBA,SAAAA,CAAgCC,qBAAqB,CAArDD,SAAAA,CAEA,MAAO,IAAME,SAAQ,CAAG,KAAK,CAAL,UAAA,CACtB,SAAA,KAAA,CAAA,GAAA,QACE,MAAA,CAAA,aAAA,CAAA,UAAA,CAAA,QAAA,CAAA,CACE,GAAG,CAAEC,GADP,CAAA,CAAA,KAAA,CAAA,CAGE,qBAAqB,CAAGC,+BAAAA,WAAD,QAAiB,MAAA,CAAA,aAAA,CAAA,UAAA,CAAA,WAAA,CAAjB,EAHzB,CAAA,CAAA,CADF,EADsB,CAAjB","sourcesContent":["import * as React from 'react';\nimport {\n  DrawerLayoutAndroid as RNDrawerLayoutAndroid,\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\n// @ts-ignore -- TODO(TS) to investigate if it's needed\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\n\nexport const FlatList = React.forwardRef(\n  <ItemT extends any>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"]},"metadata":{},"sourceType":"module"}