{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"shouldActivateOnStart\",\"disallowInterruption\",\"shouldCancelWhenOutside\",\"minDurationMs\",\"maxDist\",\"minPointers\",\"maxPointers\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import Hammer from'@egjs/hammerjs';import{State}from\"../State\";import{CONTENT_TOUCHES_DELAY,CONTENT_TOUCHES_QUICK_TAP_END_DELAY}from\"./constants\";import DiscreteGestureHandler from\"./DiscreteGestureHandler\";import{fireAfterInterval,isValidNumber,isnan}from\"./utils\";var PressGestureHandler=function(_DiscreteGestureHandl){_inherits(PressGestureHandler,_DiscreteGestureHandl);var _super=_createSuper(PressGestureHandler);function PressGestureHandler(){var _this;_classCallCheck(this,PressGestureHandler);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"visualFeedbackTimer\",void 0);_defineProperty(_assertThisInitialized(_this),\"initialEvent\",null);_defineProperty(_assertThisInitialized(_this),\"shouldDelayTouches\",true);return _this;}_createClass(PressGestureHandler,[{key:\"name\",get:function get(){return'press';}},{key:\"minDurationMs\",get:function get(){return isnan(this.config.minDurationMs)?5:this.config.minDurationMs;}},{key:\"maxDist\",get:function get(){return isnan(this.config.maxDist)?9:this.config.maxDist;}},{key:\"NativeGestureClass\",get:function get(){return Hammer.Press;}},{key:\"simulateCancelEvent\",value:function simulateCancelEvent(inputData){this.hasGestureFailed=true;this.cancelEvent(inputData);}},{key:\"updateHasCustomActivationCriteria\",value:function updateHasCustomActivationCriteria(_ref){var shouldCancelWhenOutside=_ref.shouldCancelWhenOutside,maxDistSq=_ref.maxDistSq;return shouldCancelWhenOutside||!isValidNumber(maxDistSq);}},{key:\"getState\",value:function getState(type){var _Hammer$INPUT_START$H;return(_Hammer$INPUT_START$H={},_defineProperty2(_Hammer$INPUT_START$H,Hammer.INPUT_START,State.BEGAN),_defineProperty2(_Hammer$INPUT_START$H,Hammer.INPUT_MOVE,State.ACTIVE),_defineProperty2(_Hammer$INPUT_START$H,Hammer.INPUT_END,State.END),_defineProperty2(_Hammer$INPUT_START$H,Hammer.INPUT_CANCEL,State.CANCELLED),_Hammer$INPUT_START$H)[type];}},{key:\"getConfig\",value:function getConfig(){if(!this.hasCustomActivationCriteria){return{shouldCancelWhenOutside:true,maxDistSq:10};}return this.config;}},{key:\"getHammerConfig\",value:function getHammerConfig(){return _objectSpread(_objectSpread({},_get(_getPrototypeOf(PressGestureHandler.prototype),\"getHammerConfig\",this).call(this)),{},{time:this.minDurationMs});}},{key:\"onGestureActivated\",value:function onGestureActivated(ev){this.onGestureStart(ev);}},{key:\"shouldDelayTouchForEvent\",value:function shouldDelayTouchForEvent(_ref2){var pointerType=_ref2.pointerType;return this.shouldDelayTouches&&pointerType==='touch';}},{key:\"onGestureStart\",value:function onGestureStart(ev){var _this2=this;this.isGestureRunning=true;clearTimeout(this.visualFeedbackTimer);this.initialEvent=ev;this.visualFeedbackTimer=fireAfterInterval(function(){_this2.sendGestureStartedEvent(_this2.initialEvent);_this2.initialEvent=null;},this.shouldDelayTouchForEvent(ev)&&CONTENT_TOUCHES_DELAY);}},{key:\"sendGestureStartedEvent\",value:function sendGestureStartedEvent(ev){clearTimeout(this.visualFeedbackTimer);this.visualFeedbackTimer=null;this.sendEvent(_objectSpread(_objectSpread({},ev),{},{eventType:Hammer.INPUT_MOVE,isFirst:true}));}},{key:\"forceInvalidate\",value:function forceInvalidate(event){_get(_getPrototypeOf(PressGestureHandler.prototype),\"forceInvalidate\",this).call(this,event);clearTimeout(this.visualFeedbackTimer);this.visualFeedbackTimer=null;this.initialEvent=null;}},{key:\"onRawEvent\",value:function onRawEvent(ev){var _this3=this;_get(_getPrototypeOf(PressGestureHandler.prototype),\"onRawEvent\",this).call(this,ev);if(this.isGestureRunning){if(ev.isFinal){var timeout;if(this.visualFeedbackTimer){timeout=CONTENT_TOUCHES_QUICK_TAP_END_DELAY;this.sendGestureStartedEvent(this.initialEvent);this.initialEvent=null;}fireAfterInterval(function(){_this3.sendEvent(_objectSpread(_objectSpread({},ev),{},{eventType:Hammer.INPUT_END,isFinal:true}));_this3.onGestureEnded();},timeout);}else{this.sendEvent(_objectSpread(_objectSpread({},ev),{},{eventType:Hammer.INPUT_MOVE,isFinal:false}));}}}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref3){var _ref3$shouldActivateO=_ref3.shouldActivateOnStart,shouldActivateOnStart=_ref3$shouldActivateO===void 0?false:_ref3$shouldActivateO,_ref3$disallowInterru=_ref3.disallowInterruption,disallowInterruption=_ref3$disallowInterru===void 0?false:_ref3$disallowInterru,_ref3$shouldCancelWhe=_ref3.shouldCancelWhenOutside,shouldCancelWhenOutside=_ref3$shouldCancelWhe===void 0?true:_ref3$shouldCancelWhe,_ref3$minDurationMs=_ref3.minDurationMs,minDurationMs=_ref3$minDurationMs===void 0?Number.NaN:_ref3$minDurationMs,_ref3$maxDist=_ref3.maxDist,maxDist=_ref3$maxDist===void 0?Number.NaN:_ref3$maxDist,_ref3$minPointers=_ref3.minPointers,minPointers=_ref3$minPointers===void 0?1:_ref3$minPointers,_ref3$maxPointers=_ref3.maxPointers,maxPointers=_ref3$maxPointers===void 0?1:_ref3$maxPointers,props=_objectWithoutProperties(_ref3,_excluded);return _get(_getPrototypeOf(PressGestureHandler.prototype),\"updateGestureConfig\",this).call(this,_objectSpread({shouldActivateOnStart:shouldActivateOnStart,disallowInterruption:disallowInterruption,shouldCancelWhenOutside:shouldCancelWhenOutside,minDurationMs:minDurationMs,maxDist:maxDist,minPointers:minPointers,maxPointers:maxPointers},props));}}]);return PressGestureHandler;}(DiscreteGestureHandler);export default PressGestureHandler;","map":{"version":3,"sources":["PressGestureHandler.ts"],"names":["name","minDurationMs","isnan","maxDist","NativeGestureClass","Hammer","simulateCancelEvent","updateHasCustomActivationCriteria","maxDistSq","shouldCancelWhenOutside","isValidNumber","getState","State","CANCELLED","getConfig","getHammerConfig","time","onGestureActivated","shouldDelayTouchForEvent","pointerType","onGestureStart","clearTimeout","fireAfterInterval","sendGestureStartedEvent","eventType","isFirst","forceInvalidate","onRawEvent","ev","timeout","isFinal","updateGestureConfig","shouldActivateOnStart","disallowInterruption","Number","minPointers","maxPointers","props"],"mappings":"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","sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport { State } from '../State';\nimport {\n  CONTENT_TOUCHES_DELAY,\n  CONTENT_TOUCHES_QUICK_TAP_END_DELAY,\n  HammerInputNames,\n} from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { Config, HammerInputExt } from './GestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\n\nclass PressGestureHandler extends DiscreteGestureHandler {\n  private visualFeedbackTimer: any;\n  private initialEvent: HammerInputExt | null = null;\n  get name() {\n    return 'press';\n  }\n\n  get minDurationMs() {\n    // @ts-ignore FIXME(TS)\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Press;\n  }\n\n  shouldDelayTouches = true;\n\n  simulateCancelEvent(inputData: HammerInputExt) {\n    // Long press never starts so we can't rely on the running event boolean.\n    this.hasGestureFailed = true;\n    this.cancelEvent(inputData);\n  }\n\n  updateHasCustomActivationCriteria({\n    shouldCancelWhenOutside,\n    maxDistSq,\n  }: Config & { shouldCancelWhenOutside: boolean }) {\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n  }\n\n  getState(type: keyof typeof HammerInputNames): State {\n    return {\n      [Hammer.INPUT_START]: State.BEGAN,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.CANCELLED,\n    }[type];\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  onGestureActivated(ev: HammerInputExt) {\n    this.onGestureStart(ev);\n  }\n\n  shouldDelayTouchForEvent({ pointerType }: HammerInputExt) {\n    // Don't disable event for mouse input\n    return this.shouldDelayTouches && pointerType === 'touch';\n  }\n\n  onGestureStart(ev: HammerInputExt) {\n    this.isGestureRunning = true;\n    clearTimeout(this.visualFeedbackTimer);\n    this.initialEvent = ev;\n    this.visualFeedbackTimer = fireAfterInterval(() => {\n      this.sendGestureStartedEvent(this.initialEvent as HammerInputExt);\n      this.initialEvent = null;\n    }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n  }\n\n  sendGestureStartedEvent(ev: HammerInputExt) {\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.sendEvent({\n      ...ev,\n      eventType: Hammer.INPUT_MOVE,\n      isFirst: true,\n    });\n  }\n\n  forceInvalidate(event: HammerInputExt) {\n    super.forceInvalidate(event);\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.initialEvent = null;\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (this.isGestureRunning) {\n      if (ev.isFinal) {\n        let timeout;\n        if (this.visualFeedbackTimer) {\n          // Aesthetic timing for a quick tap.\n          // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n          // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n          timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n          this.sendGestureStartedEvent(this.initialEvent as HammerInputExt);\n          this.initialEvent = null;\n        }\n        fireAfterInterval(() => {\n          this.sendEvent({\n            ...ev,\n            eventType: Hammer.INPUT_END,\n            isFinal: true,\n          });\n          // @ts-ignore -- this should explicitly support undefined\n          this.onGestureEnded();\n        }, timeout);\n      } else {\n        this.sendEvent({\n          ...ev,\n          eventType: Hammer.INPUT_MOVE,\n          isFinal: false,\n        });\n      }\n    }\n  }\n\n  updateGestureConfig({\n    shouldActivateOnStart = false,\n    disallowInterruption = false,\n    shouldCancelWhenOutside = true,\n    minDurationMs = Number.NaN,\n    maxDist = Number.NaN,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldActivateOnStart,\n      disallowInterruption,\n      shouldCancelWhenOutside,\n      minDurationMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n}\nexport default PressGestureHandler;\n"]},"metadata":{},"sourceType":"module"}