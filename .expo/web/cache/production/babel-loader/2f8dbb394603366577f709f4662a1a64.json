{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import DiscreteGestureHandler from\"./DiscreteGestureHandler\";import*as NodeManager from\"./NodeManager\";import PressGestureHandler from\"./PressGestureHandler\";import{TEST_MIN_IF_NOT_NAN,VEC_LEN_SQ}from\"./utils\";var NativeViewGestureHandler=function(_PressGestureHandler){_inherits(NativeViewGestureHandler,_PressGestureHandler);var _super=_createSuper(NativeViewGestureHandler);function NativeViewGestureHandler(){_classCallCheck(this,NativeViewGestureHandler);return _super.apply(this,arguments);}_createClass(NativeViewGestureHandler,[{key:\"onRawEvent\",value:function onRawEvent(ev){var _this=this;_get(_getPrototypeOf(NativeViewGestureHandler.prototype),\"onRawEvent\",this).call(this,ev);if(!ev.isFinal){if(TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({x:ev.deltaX,y:ev.deltaY}),10)){if(this.config.disallowInterruption){var gestures=Object.values(NodeManager.getNodes()).filter(function(gesture){var handlerTag=gesture.handlerTag,view=gesture.view,isGestureRunning=gesture.isGestureRunning;return handlerTag!==_this.handlerTag&&isGestureRunning&&gesture instanceof DiscreteGestureHandler&&view&&_this.view.contains(view);});for(var _iterator=_createForOfIteratorHelperLoose(gestures),_step;!(_step=_iterator()).done;){var gesture=_step.value;gesture.forceInvalidate(ev);}}}}}}]);return NativeViewGestureHandler;}(PressGestureHandler);export default NativeViewGestureHandler;","map":{"version":3,"sources":["NativeViewGestureHandler.ts"],"names":["onRawEvent","ev","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","x","y","deltaY","gestures","NodeManager","gesture","isGestureRunning","handlerTag"],"mappings":"6lEAAA,MAAA,uBAAA,gCAEA,MAAO,GAAP,YAAA,qBACA,MAAA,oBAAA,6BACA,OAAA,mBAAA,CAAA,UAAA,e,GAEA,yB,kUACEA,oBAAU,EAAVA,CAA+B,gBAC7B,sFAAA,EAAA,EACA,GAAI,CAACC,EAAE,CAAP,OAAA,CAAiB,CAEf,GAAIC,mBAAmB,CAACC,UAAU,CAAC,CAAEC,CAAC,CAAEH,EAAE,CAAP,MAAA,CAAgBI,CAAC,CAAEJ,EAAE,CAACK,MAAtB,CAAD,CAAX,CAAvB,EAAuB,CAAvB,CAAyE,CAEvE,GAAI,KAAA,MAAA,CAAJ,oBAAA,CAAsC,CACpC,GAAMC,SAAQ,CAAG,MAAM,CAAN,MAAA,CAAcC,WAAW,CAAzB,QAAcA,EAAd,EAAA,MAAA,CACdC,SAAAA,OAAD,CAAa,CACX,GAAM,WAAN,CAAA,OAAA,CAAM,UAAN,CAAM,IAAN,CAAA,OAAA,CAAM,IAAN,CAA0BC,gBAA1B,CAAA,OAAA,CAA0BA,gBAA1B,CACA,MAEEC,WAAU,GAAK,KAAA,CAAfA,UAAAA,EAAAA,gBAAAA,EAIAF,OAAO,WAJPE,uBAAAA,EAAAA,IAAAA,EAQA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAVF,CAJgC,CACnB,CAAjB,CAkBA,kDAAA,QAAA,mCAAgC,IAAhC,QAAgC,aAE9BF,OAAO,CAAPA,eAAAA,CAAAA,EAAAA,EACD,CACF,CACF,CACF,CACF,C,sCAjCH,mB,EAoCA,cAAA,yBAAA","sourcesContent":["import DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { HammerInputExt } from './GestureHandler';\nimport * as NodeManager from './NodeManager';\nimport PressGestureHandler from './PressGestureHandler';\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\n\nclass NativeViewGestureHandler extends PressGestureHandler {\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (!ev.isFinal) {\n      // if (this.ref instanceof ScrollView) {\n      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: ev.deltaX, y: ev.deltaY }), 10)) {\n        // @ts-ignore FIXME(TS) config type\n        if (this.config.disallowInterruption) {\n          const gestures = Object.values(NodeManager.getNodes()).filter(\n            (gesture) => {\n              const { handlerTag, view, isGestureRunning } = gesture;\n              return (\n                // Check if this gesture isn't self\n                handlerTag !== this.handlerTag &&\n                // Ensure the gesture needs to be cancelled\n                isGestureRunning &&\n                // ScrollView can cancel discrete gestures like taps and presses\n                gesture instanceof DiscreteGestureHandler &&\n                // Ensure a view exists and is a child of the current view\n                view &&\n                // @ts-ignore FIXME(TS) view type\n                this.view.contains(view)\n              );\n            }\n          );\n          // Cancel all of the gestures that passed the filter\n          for (const gesture of gestures) {\n            // TODO: Bacon: Send some cached event.\n            gesture.forceInvalidate(ev);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default NativeViewGestureHandler;\n"]},"metadata":{},"sourceType":"module"}