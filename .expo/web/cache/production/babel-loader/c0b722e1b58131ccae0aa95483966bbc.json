{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"tintColor\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{PlatformPressable}from'@react-navigation/elements';import{DrawerActions,useNavigation}from'@react-navigation/native';import*as React from'react';import Image from\"react-native-web/dist/exports/Image\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";export default function DrawerToggleButton(_ref){var tintColor=_ref.tintColor,rest=_objectWithoutProperties(_ref,_excluded);var navigation=useNavigation();return React.createElement(PlatformPressable,_extends({},rest,{accessible:true,accessibilityRole:\"button\",android_ripple:{borderless:true},onPress:function onPress(){return navigation.dispatch(DrawerActions.toggleDrawer());},style:styles.touchable,hitSlop:Platform.select({ios:undefined,default:{top:16,right:16,bottom:16,left:16}})}),React.createElement(Image,{style:[styles.icon,tintColor?{tintColor:tintColor}:null],source:require(\"./assets/toggle-drawer-icon.png\"),fadeDuration:0}));}var styles=StyleSheet.create({icon:{height:24,width:24,margin:3,resizeMode:'contain'},touchable:{marginHorizontal:11}});","map":{"version":3,"sources":["DrawerToggleButton.tsx"],"names":["rest","navigation","useNavigation","borderless","DrawerActions","styles","ios","default","top","right","bottom","left","tintColor","require","icon","height","width","margin","resizeMode","touchable","marginHorizontal"],"mappings":"wYAAA,OAAA,iBAAA,KAAA,4BAAA,CACA,OAAA,aAAA,CAAA,aAAA,KAAA,0BAAA,CAKA,MAAO,GAAP,MAAA,KAAA,OAAA,C,qLAYA,cAAe,SAAA,mBAAA,CAAA,IAAA,CAA2D,CAA/B,GAAA,UAAA,CAA+B,IAA/B,CAAA,SAAA,CAAgBA,IAAhB,0BAA+B,IAA/B,YACzC,GAAMC,WAAU,CAAGC,aAAnB,EAAA,CAEA,MACE,MAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,UAAU,CAFZ,IAAA,CAGE,iBAAiB,CAHnB,QAAA,CAIE,cAAc,CAAE,CAAEC,UAAU,CAAE,IAAd,CAJlB,CAKE,OAAO,CAAE,yBAAMF,WAAU,CAAVA,QAAAA,CAAoBG,aAAa,CALlD,YAKqCA,EAApBH,CAAN,EALX,CAME,KAAK,CAAEI,MAAM,CANf,SAAA,CAOE,OAAO,CAAE,QAAQ,CAAR,MAAA,CAAgB,CACvBC,GAAG,CADoB,SAAA,CAEvBC,OAAO,CAAE,CAAEC,GAAG,CAAL,EAAA,CAAWC,KAAK,CAAhB,EAAA,CAAsBC,MAAM,CAA5B,EAAA,CAAkCC,IAAI,CAAE,EAAxC,CAFc,CAAhB,CAPX,CAAA,CAAA,CAYE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CACE,KAAK,CAAE,CAACN,MAAM,CAAP,IAAA,CAAcO,SAAS,CAAG,CAAEA,SAAAA,CAAAA,SAAF,CAAH,CADhC,IACS,CADT,CAEE,MAAM,CAAEC,OAFV,mCAAA,CAGE,YAAY,CAAE,CAHhB,CAAA,CAZF,CADF,CAoBD,CAED,GAAMR,OAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BS,IAAI,CAAE,CACJC,MAAM,CADF,EAAA,CAEJC,KAAK,CAFD,EAAA,CAGJC,MAAM,CAHF,CAAA,CAIJC,UAAU,CAAE,SAJR,CADyB,CAO/BC,SAAS,CAAE,CACTC,gBAAgB,CAAE,EADT,CAPoB,CAAlB,CAAf","sourcesContent":["import { PlatformPressable } from '@react-navigation/elements';\nimport {\n  DrawerActions,\n  ParamListBase,\n  useNavigation,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, Platform, StyleSheet } from 'react-native';\n\nimport type { DrawerNavigationProp } from '../types';\n\ntype Props = {\n  accessibilityLabel?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  tintColor?: string;\n};\n\nexport default function DrawerToggleButton({ tintColor, ...rest }: Props) {\n  const navigation = useNavigation<DrawerNavigationProp<ParamListBase>>();\n\n  return (\n    <PlatformPressable\n      {...rest}\n      accessible\n      accessibilityRole=\"button\"\n      android_ripple={{ borderless: true }}\n      onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n      style={styles.touchable}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <Image\n        style={[styles.icon, tintColor ? { tintColor } : null]}\n        source={require('./assets/toggle-drawer-icon.png')}\n        fadeDuration={0}\n      />\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n  touchable: {\n    marginHorizontal: 11,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}