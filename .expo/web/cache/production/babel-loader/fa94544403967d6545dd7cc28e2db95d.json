{"ast":null,"code":"export default function findFocusedRoute(state){var _current2,_current$index3,_current3;var current=state;while(((_current=current)===null||_current===void 0?void 0:_current.routes[(_current$index=current.index)!==null&&_current$index!==void 0?_current$index:0].state)!=null){var _current,_current$index,_current$index2;current=current.routes[(_current$index2=current.index)!==null&&_current$index2!==void 0?_current$index2:0].state;}var route=(_current2=current)===null||_current2===void 0?void 0:_current2.routes[(_current$index3=(_current3=current)===null||_current3===void 0?void 0:_current3.index)!==null&&_current$index3!==void 0?_current$index3:0];return route;}","map":{"version":3,"sources":["findFocusedRoute.tsx"],"names":["current","route"],"mappings":"AAEA,cAAe,SAAA,iBAAA,CAAA,KAAA,CAA+C,CAAA,GAAA,UAAA,CAAA,eAAA,CAAA,SAAA,CAC5D,GAAIA,QAAiC,CAArC,KAAA,CAEA,MAAO,CAAA,CAAA,QAAA,CAAA,OAAA,IAAA,IAAA,EAAA,QAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA,cAAA,CAAgBA,OAAO,CAAvB,KAAA,IAAA,IAAA,EAAA,cAAA,GAAA,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,GAAP,IAAA,CAA0D,CAAA,GAAA,SAAA,CAAA,cAAA,CAAA,eAAA,CACxDA,OAAO,CAAGA,OAAO,CAAPA,MAAAA,CAAAA,CAAAA,eAAAA,CAAeA,OAAO,CAAtBA,KAAAA,IAAAA,IAAAA,EAAAA,eAAAA,GAAAA,IAAAA,EAAAA,CAAAA,eAAAA,CAAAA,CAAAA,EAAVA,KAAAA,CACD,CAED,GAAMC,MAAK,CAAA,CAAA,SAAA,CAAA,OAAA,IAAA,IAAA,EAAA,SAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAGD,SAAAA,CAAAA,MAAAA,CAAAA,CAAAA,eAAAA,CAAAA,CAAAA,SAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,SAAAA,GAAAA,IAAAA,EAAAA,CAAAA,IAAAA,EAAAA,CAAgBA,SAAAA,CAAhBA,KAAAA,IAAAA,IAAAA,EAAAA,eAAAA,GAAAA,IAAAA,EAAAA,CAAAA,eAAAA,CAAd,CAAcA,CAAd,CAEA,MAAA,MAAA,CACD","sourcesContent":["import type { InitialState } from '@react-navigation/routers';\n\nexport default function findFocusedRoute(state: InitialState) {\n  let current: InitialState | undefined = state;\n\n  while (current?.routes[current.index ?? 0].state != null) {\n    current = current.routes[current.index ?? 0].state;\n  }\n\n  const route = current?.routes[current?.index ?? 0];\n\n  return route;\n}\n"]},"metadata":{},"sourceType":"module"}