{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{ContinousBaseGesture}from\"./gesture\";var changeEventCalculator=function(){var _f=function _f(current,previous){var changePayload;if(previous===undefined){changePayload={forceChange:current.force};}else{changePayload={forceChange:current.force-previous.force};}return _objectSpread(_objectSpread({},current),changePayload);};_f._closure={};_f.asString=\"function changeEventCalculator(current,previous){let changePayload;if(previous===undefined){changePayload={forceChange:current.force};}else{changePayload={forceChange:current.force-previous.force};}return{...current,...changePayload};}\";_f.__workletHash=2192363871004;_f.__location=\"C:\\\\Users\\\\DELL\\\\Documents\\\\ReactNative\\\\Smartendance\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\forceTouchGesture.js (5:0)\";return _f;}();export var ForceTouchGesture=function(_ContinousBaseGesture){_inherits(ForceTouchGesture,_ContinousBaseGesture);var _super=_createSuper(ForceTouchGesture);function ForceTouchGesture(){var _this;_classCallCheck(this,ForceTouchGesture);_this=_super.call(this);_defineProperty(_assertThisInitialized(_this),\"config\",{});_this.handlerName='ForceTouchGestureHandler';return _this;}_createClass(ForceTouchGesture,[{key:\"minForce\",value:function minForce(force){this.config.minForce=force;return this;}},{key:\"maxForce\",value:function maxForce(force){this.config.maxForce=force;return this;}},{key:\"feedbackOnActivation\",value:function feedbackOnActivation(value){this.config.feedbackOnActivation=value;return this;}},{key:\"onChange\",value:function onChange(callback){this.handlers.changeEventCalculator=changeEventCalculator;return _get(_getPrototypeOf(ForceTouchGesture.prototype),\"onChange\",this).call(this,callback);}}]);return ForceTouchGesture;}(ContinousBaseGesture);","map":{"version":3,"sources":["forceTouchGesture.ts"],"names":["previous","changePayload","forceChange","current","force","constructor","minForce","maxForce","feedbackOnActivation","onChange"],"mappings":"moEAAA,OAAA,oBAAA,iB,GAWA,sB,+BAAA,O,CAAA,Q,CAGE,CAEA,GAAA,cAAA,CACA,GAAIA,QAAQ,GAAZ,SAAA,CAA4B,CAC1BC,aAAa,CAAG,CACdC,WAAW,CAAEC,OAAO,CAACC,KADP,CAAhBH,CADF,CAAA,IAIO,CACLA,aAAa,CAAG,CACdC,WAAW,CAAEC,OAAO,CAAPA,KAAAA,CAAgBH,QAAQ,CAACI,KADxB,CAAhBH,CAGD,CAED,sCAAO,OAAP,EAAwBA,aAAxB,EACD,C,seAED,UAAO,kBAAP,+HAMEI,4BAAc,mDACZ,wBADY,eAAA,+BAAA,QAAA,CAF+C,EAE/C,CAAA,CAGZ,MAAA,WAAA,CAAA,0BAAA,CAHY,aAIb,CAVH,sDAYEC,kBAAQ,KAARA,CAAwB,CACtB,KAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CACA,MAAA,KAAA,CACD,CAfH,wBAiBEC,kBAAQ,KAARA,CAAwB,CACtB,KAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CACA,MAAA,KAAA,CACD,CApBH,oCAsBEC,8BAAoB,KAApBA,CAAqC,CACnC,KAAA,MAAA,CAAA,oBAAA,CAAA,KAAA,CACA,MAAA,KAAA,CACD,CAzBH,wBA2BEC,kBAAQ,QAARA,CASE,CAEA,KAAA,QAAA,CAAA,qBAAA,CAAA,qBAAA,CACA,oFAAA,QAAA,EACD,CAxCH,+BAAO,oBAAP","sourcesContent":["import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport {\n  ForceTouchGestureConfig,\n  ForceTouchGestureHandlerEventPayload,\n} from '../ForceTouchGestureHandler';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\n\ntype ForceTouchGestureChangeEventPayload = {\n  forceChange: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<ForceTouchGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<ForceTouchGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: ForceTouchGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      forceChange: current.force,\n    };\n  } else {\n    changePayload = {\n      forceChange: current.force - previous.force,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class ForceTouchGesture extends ContinousBaseGesture<\n  ForceTouchGestureHandlerEventPayload,\n  ForceTouchGestureChangeEventPayload\n> {\n  public config: BaseGestureConfig & ForceTouchGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'ForceTouchGestureHandler';\n  }\n\n  minForce(force: number) {\n    this.config.minForce = force;\n    return this;\n  }\n\n  maxForce(force: number) {\n    this.config.maxForce = force;\n    return this;\n  }\n\n  feedbackOnActivation(value: boolean) {\n    this.config.feedbackOnActivation = value;\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        GestureUpdateEvent<\n          ForceTouchGestureHandlerEventPayload &\n            ForceTouchGestureChangeEventPayload\n        >\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, ForceTouchGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ForceTouchGestureType = InstanceType<typeof ForceTouchGesture>;\n"]},"metadata":{},"sourceType":"module"}