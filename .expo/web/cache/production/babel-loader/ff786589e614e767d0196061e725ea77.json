{"ast":null,"code":"export var handlerIDToTag={};var handlers=new Map();var handlerTag=1;export function getNextHandlerTag(){return handlerTag++;}export function registerHandler(handlerTag,handler){handlers.set(handlerTag,handler);}export function unregisterHandler(handlerTag){handlers.delete(handlerTag);}export function findHandler(handlerTag){return handlers.get(handlerTag);}","map":{"version":3,"sources":["handlersRegistry.ts"],"names":["handlerIDToTag","handlers","handlerTag"],"mappings":"AAEA,MAAO,IAAMA,eAAsC,CAA5C,EAAA,CACP,GAAMC,SAAQ,CAAG,GAAjB,IAAiB,EAAjB,CAEA,GAAIC,WAAU,CAAd,CAAA,CAEA,MAAO,SAAA,kBAAA,EAAqC,CAC1C,MAAOA,WAAP,EAAA,CACD,CAED,MAAO,SAAA,gBAAA,CAAA,UAAA,CAAA,OAAA,CAAmE,CACxED,QAAQ,CAARA,GAAAA,CAAAA,UAAAA,CAAAA,OAAAA,EACD,CAED,MAAO,SAAA,kBAAA,CAAA,UAAA,CAA+C,CACpDA,QAAQ,CAARA,MAAAA,CAAAA,UAAAA,EACD,CAED,MAAO,SAAA,YAAA,CAAA,UAAA,CAAyC,CAC9C,MAAOA,SAAQ,CAARA,GAAAA,CAAP,UAAOA,CAAP,CACD","sourcesContent":["import { GestureType } from './gestures/gesture';\n\nexport const handlerIDToTag: Record<string, number> = {};\nconst handlers = new Map<number, GestureType>();\n\nlet handlerTag = 1;\n\nexport function getNextHandlerTag(): number {\n  return handlerTag++;\n}\n\nexport function registerHandler(handlerTag: number, handler: GestureType) {\n  handlers.set(handlerTag, handler);\n}\n\nexport function unregisterHandler(handlerTag: number) {\n  handlers.delete(handlerTag);\n}\n\nexport function findHandler(handlerTag: number) {\n  return handlers.get(handlerTag);\n}\n"]},"metadata":{},"sourceType":"module"}