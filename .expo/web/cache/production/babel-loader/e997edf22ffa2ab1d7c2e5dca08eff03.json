{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{nanoid}from'nanoid/non-secure';import BaseRouter from\"./BaseRouter\";export var StackActions={replace:function replace(name,params){return{type:'REPLACE',payload:{name:name,params:params}};},push:function push(name,params){return{type:'PUSH',payload:{name:name,params:params}};},pop:function pop(){var count=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;return{type:'POP',payload:{count:count}};},popToTop:function popToTop(){return{type:'POP_TO_TOP'};}};export default function StackRouter(options){var router=_objectSpread(_objectSpread({},BaseRouter),{},{type:'stack',getInitialState:function getInitialState(_ref){var routeNames=_ref.routeNames,routeParamList=_ref.routeParamList;var initialRouteName=options.initialRouteName!==undefined&&routeNames.includes(options.initialRouteName)?options.initialRouteName:routeNames[0];return{stale:false,type:'stack',key:\"stack-\"+nanoid(),index:0,routeNames:routeNames,routes:[{key:initialRouteName+\"-\"+nanoid(),name:initialRouteName,params:routeParamList[initialRouteName]}]};},getRehydratedState:function getRehydratedState(partialState,_ref2){var routeNames=_ref2.routeNames,routeParamList=_ref2.routeParamList;var state=partialState;if(state.stale===false){return state;}var routes=state.routes.filter(function(route){return routeNames.includes(route.name);}).map(function(route){return _objectSpread(_objectSpread({},route),{},{key:route.key||route.name+\"-\"+nanoid(),params:routeParamList[route.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[route.name]),route.params):route.params});});if(routes.length===0){var initialRouteName=options.initialRouteName!==undefined?options.initialRouteName:routeNames[0];routes.push({key:initialRouteName+\"-\"+nanoid(),name:initialRouteName,params:routeParamList[initialRouteName]});}return{stale:false,type:'stack',key:\"stack-\"+nanoid(),index:routes.length-1,routeNames:routeNames,routes:routes};},getStateForRouteNamesChange:function getStateForRouteNamesChange(state,_ref3){var routeNames=_ref3.routeNames,routeParamList=_ref3.routeParamList,routeKeyChanges=_ref3.routeKeyChanges;var routes=state.routes.filter(function(route){return routeNames.includes(route.name)&&!routeKeyChanges.includes(route.name);});if(routes.length===0){var initialRouteName=options.initialRouteName!==undefined&&routeNames.includes(options.initialRouteName)?options.initialRouteName:routeNames[0];routes.push({key:initialRouteName+\"-\"+nanoid(),name:initialRouteName,params:routeParamList[initialRouteName]});}return _objectSpread(_objectSpread({},state),{},{routeNames:routeNames,routes:routes,index:Math.min(state.index,routes.length-1)});},getStateForRouteFocus:function getStateForRouteFocus(state,key){var index=state.routes.findIndex(function(r){return r.key===key;});if(index===-1||index===state.index){return state;}return _objectSpread(_objectSpread({},state),{},{index:index,routes:state.routes.slice(0,index+1)});},getStateForAction:function getStateForAction(state,action,options){var routeParamList=options.routeParamList;switch(action.type){case'REPLACE':{var index=action.target===state.key&&action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(index===-1){return null;}var _action$payload=action.payload,name=_action$payload.name,key=_action$payload.key,params=_action$payload.params;if(!state.routeNames.includes(name)){return null;}return _objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(route,i){return i===index?{key:key!==undefined?key:name+\"-\"+nanoid(),name:name,params:routeParamList[name]!==undefined?_objectSpread(_objectSpread({},routeParamList[name]),params):params}:route;})});}case'PUSH':if(state.routeNames.includes(action.payload.name)){var getId=options.routeGetIdList[action.payload.name];var id=getId===null||getId===void 0?void 0:getId({params:action.payload.params});var route=id?state.routes.find(function(route){return route.name===action.payload.name&&id===(getId===null||getId===void 0?void 0:getId({params:route.params}));}):undefined;var routes;if(route){routes=state.routes.filter(function(r){return r.key!==route.key;});routes.push(_objectSpread(_objectSpread({},route),{},{params:routeParamList[action.payload.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[action.payload.name]),action.payload.params):action.payload.params}));}else{routes=[].concat(_toConsumableArray(state.routes),[{key:action.payload.name+\"-\"+nanoid(),name:action.payload.name,params:routeParamList[action.payload.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[action.payload.name]),action.payload.params):action.payload.params}]);}return _objectSpread(_objectSpread({},state),{},{index:routes.length-1,routes:routes});}return null;case'POP':{var _index=action.target===state.key&&action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(_index>0){var count=Math.max(_index-action.payload.count+1,1);var _routes=state.routes.slice(0,count).concat(state.routes.slice(_index+1));return _objectSpread(_objectSpread({},state),{},{index:_routes.length-1,routes:_routes});}return null;}case'POP_TO_TOP':return router.getStateForAction(state,{type:'POP',payload:{count:state.routes.length-1}},options);case'NAVIGATE':if(action.payload.name!==undefined&&!state.routeNames.includes(action.payload.name)){return null;}if(action.payload.key||action.payload.name){var _action$payload$path;var _index2=-1;var _getId=action.payload.key===undefined&&action.payload.name!==undefined?options.routeGetIdList[action.payload.name]:undefined;var _id=_getId===null||_getId===void 0?void 0:_getId({params:action.payload.params});if(_id){_index2=state.routes.findIndex(function(route){return route.name===action.payload.name&&_id===(_getId===null||_getId===void 0?void 0:_getId({params:route.params}));});}else if(state.routes[state.index].name===action.payload.name&&action.payload.key===undefined||state.routes[state.index].key===action.payload.key){_index2=state.index;}else{for(var i=state.routes.length-1;i>=0;i--){if(state.routes[i].name===action.payload.name&&action.payload.key===undefined||state.routes[i].key===action.payload.key){_index2=i;break;}}}if(_index2===-1&&action.payload.key&&action.payload.name===undefined){return null;}if(_index2===-1&&action.payload.name!==undefined){var _action$payload$key;var _routes2=[].concat(_toConsumableArray(state.routes),[{key:(_action$payload$key=action.payload.key)!==null&&_action$payload$key!==void 0?_action$payload$key:action.payload.name+\"-\"+nanoid(),name:action.payload.name,path:action.payload.path,params:routeParamList[action.payload.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[action.payload.name]),action.payload.params):action.payload.params}]);return _objectSpread(_objectSpread({},state),{},{routes:_routes2,index:_routes2.length-1});}var _route=state.routes[_index2];var _params;if(action.payload.merge){_params=action.payload.params!==undefined||routeParamList[_route.name]!==undefined?_objectSpread(_objectSpread(_objectSpread({},routeParamList[_route.name]),_route.params),action.payload.params):_route.params;}else{_params=routeParamList[_route.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[_route.name]),action.payload.params):action.payload.params;}return _objectSpread(_objectSpread({},state),{},{index:_index2,routes:[].concat(_toConsumableArray(state.routes.slice(0,_index2)),[_params!==_route.params||action.payload.path&&action.payload.path!==_route.path?_objectSpread(_objectSpread({},_route),{},{path:(_action$payload$path=action.payload.path)!==null&&_action$payload$path!==void 0?_action$payload$path:_route.path,params:_params}):state.routes[_index2]])});}return null;case'GO_BACK':if(state.index>0){return router.getStateForAction(state,{type:'POP',payload:{count:1},target:action.target,source:action.source},options);}return null;default:return BaseRouter.getStateForAction(state,action);}},actionCreators:StackActions});return router;}","map":{"version":3,"sources":["StackRouter.tsx"],"names":["StackActions","replace","type","payload","name","params","push","pop","count","popToTop","router","getInitialState","routeParamList","initialRouteName","options","routeNames","stale","key","nanoid","index","routes","getRehydratedState","state","route","getStateForRouteNamesChange","routeKeyChanges","Math","getStateForRouteFocus","r","getStateForAction","action","getId","id","i","path","target","source","BaseRouter","actionCreators"],"mappings":"i5BAAA,OAAA,MAAA,KAAA,mBAAA,CAEA,MAAA,WAAA,oBAiFA,MAAO,IAAMA,aAAY,CAAG,CAC1BC,OAD0B,kBACnB,IADmB,CACnB,MADmB,CAC8B,CACtD,MAAO,CAAEC,IAAI,CAAN,SAAA,CAAmBC,OAAO,CAAE,CAAEC,IAAF,CAAEA,IAAF,CAAQC,MAAAA,CAAAA,MAAR,CAA5B,CAAP,CAFwB,CAAA,CAI1BC,IAJ0B,eAItB,IAJsB,CAItB,MAJsB,CAI2B,CACnD,MAAO,CAAEJ,IAAI,CAAN,MAAA,CAAgBC,OAAO,CAAE,CAAEC,IAAF,CAAEA,IAAF,CAAQC,MAAAA,CAAAA,MAAR,CAAzB,CAAP,CALwB,CAAA,CAO1BE,GAP0B,eAOc,CAAA,GAApCC,MAAoC,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAApB,CAAoB,CACtC,MAAO,CAAEN,IAAI,CAAN,KAAA,CAAeC,OAAO,CAAE,CAAEK,KAAAA,CAAAA,KAAF,CAAxB,CAAP,CARwB,CAAA,CAU1BC,QAV0B,oBAUE,CAC1B,MAAO,CAAEP,IAAI,CAAE,YAAR,CAAP,CACD,CAZyB,CAArB,CAeP,cAAe,SAAA,YAAA,CAAA,OAAA,CAAkD,CAC/D,GAAMQ,OAGL,gCAAG,UAAH,MAGCR,IAAI,CAHF,OAAH,CAKCS,eALD,0BAKgB,IALhB,CAKiD,CAAhC,GAAA,WAAA,CAAgC,IAAhC,CAAA,UAAA,CAAcC,cAAd,CAAgC,IAAhC,CAAcA,cAAd,CACd,GAAMC,iBAAgB,CACpBC,OAAO,CAAPA,gBAAAA,GAAAA,SAAAA,EACAC,UAAU,CAAVA,QAAAA,CAAoBD,OAAO,CAD3BA,gBACAC,CADAD,CAEIA,OAAO,CAFXA,gBAAAA,CAGIC,UAAU,CAJhB,CAIgB,CAJhB,CAMA,MAAO,CACLC,KAAK,CADA,KAAA,CAELd,IAAI,CAFC,OAAA,CAGLe,GAAG,UAAWC,MAHT,EAAA,CAILC,KAAK,CAJA,CAAA,CAKLJ,UALK,CAKLA,UALK,CAMLK,MAAM,CAAE,CACN,CACEH,GAAG,CAAKJ,gBAAL,KAAyBK,MAD9B,EAAA,CAEEd,IAAI,CAFN,gBAAA,CAGEC,MAAM,CAAEO,cAAc,CAAA,gBAAA,CAHxB,CADM,CANH,CAAP,CAZA,CAAH,CA4BCS,kBA5BD,6BA4BmB,YA5BnB,CA4BmB,KA5BnB,CA4BkE,CAAhC,GAAA,WAAA,CAAgC,KAAhC,CAAA,UAAA,CAAcT,cAAd,CAAgC,KAAhC,CAAcA,cAAd,CAC/B,GAAIU,MAAK,CAAT,YAAA,CAEA,GAAIA,KAAK,CAALA,KAAAA,GAAJ,KAAA,CAA2B,CACzB,MAAA,MAAA,CACD,CAED,GAAMF,OAAM,CAAG,KAAK,CAAL,MAAA,CAAA,MAAA,CACJG,SAAAA,KAAD,QAAWR,WAAU,CAAVA,QAAAA,CAAoBQ,KAAK,CAD/B,IACMR,CAAX,EADK,EAAA,GAAA,CAGVQ,SAAAA,KAAD,wCACG,KADH,MAGIN,GAAG,CAAEM,KAAK,CAALA,GAAAA,EAAgBA,KAAK,CAACnB,IAAtBmB,KAA8BL,MAFpC,EADH,CAIIb,MAAM,CACJ,cAAc,CAACkB,KAAK,CAApB,IAAc,CAAd,GAAA,SAAA,gCAESX,cAAc,CAACW,KAAK,CADzB,IACmB,CAFvB,EAGSA,KAAK,CAAClB,MAHf,EAKIkB,KAAK,CAAClB,MAVhB,IAHW,CAAf,CAiBA,GAAIe,MAAM,CAANA,MAAAA,GAAJ,CAAA,CAAyB,CACvB,GAAMP,iBAAgB,CACpBC,OAAO,CAAPA,gBAAAA,GAAAA,SAAAA,CACIA,OAAO,CADXA,gBAAAA,CAEIC,UAAU,CAHhB,CAGgB,CAHhB,CAKAK,MAAM,CAANA,IAAAA,CAAY,CACVH,GAAG,CAAKJ,gBAAL,KAAyBK,MADlB,EAAA,CAEVd,IAAI,CAFM,gBAAA,CAGVC,MAAM,CAAEO,cAAc,CAAA,gBAAA,CAHZ,CAAZQ,EAKD,CAED,MAAO,CACLJ,KAAK,CADA,KAAA,CAELd,IAAI,CAFC,OAAA,CAGLe,GAAG,UAAWC,MAHT,EAAA,CAILC,KAAK,CAAEC,MAAM,CAANA,MAAAA,CAJF,CAAA,CAKLL,UALK,CAKLA,UALK,CAMLK,MAAAA,CAAAA,MANK,CAAP,CAjEA,CAAH,CA2ECI,2BA3ED,sCA2E4B,KA3E5B,CA2E4B,KA3E5B,CA8EG,CADA,GAAA,WAAA,CACA,KADA,CAAA,UAAA,CAAA,cAAA,CACA,KADA,CAAA,cAAA,CAA8BC,eAA9B,CACA,KADA,CAA8BA,eAA9B,CAEA,GAAML,OAAM,CAAGE,KAAK,CAALA,MAAAA,CAAAA,MAAAA,CACZC,SAAAA,KAAD,QACER,WAAU,CAAVA,QAAAA,CAAoBQ,KAAK,CAAzBR,IAAAA,GACA,CAACU,eAAe,CAAfA,QAAAA,CAAyBF,KAAK,CAHnC,IAGKE,CAFH,EADaH,CAAf,CAMA,GAAIF,MAAM,CAANA,MAAAA,GAAJ,CAAA,CAAyB,CACvB,GAAMP,iBAAgB,CACpBC,OAAO,CAAPA,gBAAAA,GAAAA,SAAAA,EACAC,UAAU,CAAVA,QAAAA,CAAoBD,OAAO,CAD3BA,gBACAC,CADAD,CAEIA,OAAO,CAFXA,gBAAAA,CAGIC,UAAU,CAJhB,CAIgB,CAJhB,CAMAK,MAAM,CAANA,IAAAA,CAAY,CACVH,GAAG,CAAKJ,gBAAL,KAAyBK,MADlB,EAAA,CAEVd,IAAI,CAFM,gBAAA,CAGVC,MAAM,CAAEO,cAAc,CAAA,gBAAA,CAHZ,CAAZQ,EAKD,CAED,sCAAO,KAAP,MAEEL,UAFK,CAELA,UAFF,CAGEK,MAHK,CAGLA,MAHF,CAIED,KAAK,CAAEO,IAAI,CAAJA,GAAAA,CAASJ,KAAK,CAAdI,KAAAA,CAAsBN,MAAM,CAANA,MAAAA,CAAtBM,CAAAA,CAJT,GAnGA,CAAH,CA2GCC,qBA3GD,gCA2GsB,KA3GtB,CA2GsB,GA3GtB,CA2GmC,CAChC,GAAMR,MAAK,CAAGG,KAAK,CAALA,MAAAA,CAAAA,SAAAA,CAAwBM,SAAAA,CAAD,QAAOA,EAAC,CAADA,GAAAA,GAA5C,GAAqC,EAAvBN,CAAd,CAEA,GAAIH,KAAK,GAAK,CAAVA,CAAAA,EAAgBA,KAAK,GAAKG,KAAK,CAAnC,KAAA,CAA2C,CACzC,MAAA,MAAA,CACD,CAED,sCAAO,KAAP,MAEEH,KAFK,CAELA,KAFF,CAGEC,MAAM,CAAEE,KAAK,CAALA,MAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CAAsBH,KAAK,CAA3BG,CAAAA,CAHV,GAlHA,CAAH,CAyHCO,iBAzHD,4BAyHkB,KAzHlB,CAyHkB,MAzHlB,CAyHkB,OAzHlB,CAyH2C,CACxC,GAAQjB,eAAR,CAAA,OAAA,CAAQA,cAAR,CAEA,OAAQkB,MAAM,CAAd,IAAA,EACE,IAAA,SAAA,CAAgB,CACd,GAAMX,MAAK,CACTW,MAAM,CAANA,MAAAA,GAAkBR,KAAK,CAAvBQ,GAAAA,EAA+BA,MAAM,CAArCA,MAAAA,CACIR,KAAK,CAALA,MAAAA,CAAAA,SAAAA,CAAwBM,SAAAA,CAAD,QAAOA,EAAC,CAADA,GAAAA,GAAUE,MAAM,CADlDA,MAC2B,EAAvBR,CADJQ,CAEIR,KAAK,CAHX,KAAA,CAKA,GAAIH,KAAK,GAAK,CAAd,CAAA,CAAkB,CAChB,MAAA,KAAA,CACD,CAED,oBAA8BW,MAAM,CAApC,OAAA,CAAM,IAAN,iBAAM,IAAN,CAAM,GAAN,iBAAM,GAAN,CAAmBzB,MAAnB,iBAAmBA,MAAnB,CAEA,GAAI,CAACiB,KAAK,CAALA,UAAAA,CAAAA,QAAAA,CAAL,IAAKA,CAAL,CAAsC,CACpC,MAAA,KAAA,CACD,CAED,sCAAO,KAAP,MAEEF,MAAM,CAAEE,KAAK,CAALA,MAAAA,CAAAA,GAAAA,CAAiB,SAAA,KAAA,CAAA,CAAA,QACvB,EAAC,GAAD,KAAA,CACI,CACEL,GAAG,CAAEA,GAAG,GAAHA,SAAAA,CAAAA,GAAAA,CAA6Bb,IAA7Ba,KAAqCC,MAD5C,EAAA,CAEEd,IAFF,CAEEA,IAFF,CAGEC,MAAM,CACJ,cAAc,CAAd,IAAc,CAAd,GAAA,SAAA,gCAESO,cAAc,CADnB,IACmB,CAFvB,EAGSP,MAHT,EAKIA,MATR,CADJ,CADMiB,KAAiB,EAAjBA,CAFV,GAkBD,CAED,IAAA,MAAA,CACE,GAAIA,KAAK,CAALA,UAAAA,CAAAA,QAAAA,CAA0BQ,MAAM,CAANA,OAAAA,CAA9B,IAAIR,CAAJ,CAAoD,CAClD,GAAMS,MAAK,CAAGjB,OAAO,CAAPA,cAAAA,CAAuBgB,MAAM,CAANA,OAAAA,CAArC,IAAchB,CAAd,CACA,GAAMkB,GAAE,CAAGD,KAAH,GAAA,IAAGA,EAAAA,KAAH,GAAA,IAAA,EAAGA,CAAH,IAAA,EAAGA,CAAAA,KAAK,CAAG,CAAE1B,MAAM,CAAEyB,MAAM,CAANA,OAAAA,CAAezB,MAAzB,CAAH,CAAhB,CAEA,GAAMkB,MAAK,CAAGS,EAAE,CACZ,KAAK,CAAL,MAAA,CAAA,IAAA,CACGT,SAAAA,KAAD,QACEA,MAAK,CAALA,IAAAA,GAAeO,MAAM,CAANA,OAAAA,CAAfP,IAAAA,EACAS,EAAE,IAAKD,KAAL,GAAA,IAAKA,EAAAA,KAAL,GAAA,IAAA,EAAKA,CAAL,IAAA,EAAKA,CAAAA,KAAK,CAAG,CAAE1B,MAAM,CAAEkB,KAAK,CAAClB,MAAhB,CAAH,CAAV,CAFJ,EADF,CADY,CAAhB,SAAA,CAQA,GAAA,OAAA,CAEA,GAAA,KAAA,CAAW,CACTe,MAAM,CAAGE,KAAK,CAALA,MAAAA,CAAAA,MAAAA,CAAqBM,SAAAA,CAAD,QAAOA,EAAC,CAADA,GAAAA,GAAUL,KAAK,CAAnDH,GAA6B,EAApBE,CAATF,CACAA,MAAM,CAANA,IAAAA,gCAAY,KAAZA,MAEEf,MAAM,CACJ,cAAc,CAACyB,MAAM,CAANA,OAAAA,CAAf,IAAc,CAAd,GAAA,SAAA,gCAESlB,cAAc,CAACkB,MAAM,CAANA,OAAAA,CADpB,IACmB,CAFvB,EAGSA,MAAM,CAANA,OAAAA,CAAezB,MAHxB,EAKIyB,MAAM,CAANA,OAAAA,CAAezB,MARvBe,IAFF,CAAA,IAYO,CACLA,MAAM,8BACDE,KAAK,CADD,MAAH,GAEJ,CACEL,GAAG,CAAKa,MAAM,CAANA,OAAAA,CAAe1B,IAApB,KAA4Bc,MADjC,EAAA,CAEEd,IAAI,CAAE0B,MAAM,CAANA,OAAAA,CAFR,IAAA,CAGEzB,MAAM,CACJ,cAAc,CAACyB,MAAM,CAANA,OAAAA,CAAf,IAAc,CAAd,GAAA,SAAA,gCAESlB,cAAc,CAACkB,MAAM,CAANA,OAAAA,CADpB,IACmB,CAFvB,EAGSA,MAAM,CAANA,OAAAA,CAAezB,MAHxB,EAKIyB,MAAM,CAANA,OAAAA,CAAezB,MATvB,CAFI,EAANe,CAcD,CAED,sCAAO,KAAP,MAEED,KAAK,CAAEC,MAAM,CAANA,MAAAA,CAFF,CAAP,CAGEA,MAAAA,CAAAA,MAHF,GAKD,CAED,MAAA,KAAA,CAEF,IAAA,KAAA,CAAY,CACV,GAAMD,OAAK,CACTW,MAAM,CAANA,MAAAA,GAAkBR,KAAK,CAAvBQ,GAAAA,EAA+BA,MAAM,CAArCA,MAAAA,CACIR,KAAK,CAALA,MAAAA,CAAAA,SAAAA,CAAwBM,SAAAA,CAAD,QAAOA,EAAC,CAADA,GAAAA,GAAUE,MAAM,CADlDA,MAC2B,EAAvBR,CADJQ,CAEIR,KAAK,CAHX,KAAA,CAKA,GAAIH,MAAK,CAAT,CAAA,CAAe,CACb,GAAMX,MAAK,CAAGkB,IAAI,CAAJA,GAAAA,CAASP,MAAK,CAAGW,MAAM,CAANA,OAAAA,CAARX,KAAAA,CAATO,CAAAA,CAAd,CAAcA,CAAd,CACA,GAAMN,QAAM,CAAGE,KAAK,CAALA,MAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA,KAAAA,EAAAA,MAAAA,CAELA,KAAK,CAALA,MAAAA,CAAAA,KAAAA,CAAmBH,MAAK,CAFlC,CAEUG,CAFKA,CAAf,CAIA,sCAAO,KAAP,MAEEH,KAAK,CAAEC,OAAM,CAANA,MAAAA,CAFF,CAAP,CAGEA,MAAAA,CAAAA,OAHF,GAKD,CAED,MAAA,KAAA,CACD,CAED,IAAA,YAAA,CACE,MAAO,OAAM,CAAN,iBAAA,CAAA,KAAA,CAEL,CACElB,IAAI,CADN,KAAA,CAEEC,OAAO,CAAE,CAAEK,KAAK,CAAEc,KAAK,CAALA,MAAAA,CAAAA,MAAAA,CAAsB,CAA/B,CAFX,CAFK,CAAP,OAAO,CAAP,CASF,IAAA,UAAA,CACE,GACEQ,MAAM,CAANA,OAAAA,CAAAA,IAAAA,GAAAA,SAAAA,EACA,CAACR,KAAK,CAALA,UAAAA,CAAAA,QAAAA,CAA0BQ,MAAM,CAANA,OAAAA,CAF7B,IAEGR,CAFH,CAGE,CACA,MAAA,KAAA,CACD,CAED,GAAIQ,MAAM,CAANA,OAAAA,CAAAA,GAAAA,EAAsBA,MAAM,CAANA,OAAAA,CAA1B,IAAA,CAA+C,CAAA,GAAA,qBAAA,CAE7C,GAAIX,QAAK,CAAG,CAAZ,CAAA,CAEA,GAAMY,OAAK,CAETD,MAAM,CAANA,OAAAA,CAAAA,GAAAA,GAAAA,SAAAA,EACAA,MAAM,CAANA,OAAAA,CAAAA,IAAAA,GADAA,SAAAA,CAEIhB,OAAO,CAAPA,cAAAA,CAAuBgB,MAAM,CAANA,OAAAA,CAF3BA,IAEIhB,CAFJgB,CAFF,SAAA,CAMA,GAAME,IAAE,CAAGD,MAAH,GAAA,IAAGA,EAAAA,MAAH,GAAA,IAAA,EAAGA,CAAH,IAAA,EAAGA,CAAAA,MAAK,CAAG,CAAE1B,MAAM,CAAEyB,MAAM,CAANA,OAAAA,CAAezB,MAAzB,CAAH,CAAhB,CAEA,GAAA,GAAA,CAAQ,CACNc,OAAK,CAAG,KAAK,CAAL,MAAA,CAAA,SAAA,CACLI,SAAAA,KAAD,QACEA,MAAK,CAALA,IAAAA,GAAeO,MAAM,CAANA,OAAAA,CAAfP,IAAAA,EACAS,GAAE,IAAKD,MAAL,GAAA,IAAKA,EAAAA,MAAL,GAAA,IAAA,EAAKA,CAAL,IAAA,EAAKA,CAAAA,MAAK,CAAG,CAAE1B,MAAM,CAAEkB,KAAK,CAAClB,MAAhB,CAAH,CAAV,CAFJ,EADM,CAARc,CADF,CAAA,IAMO,IACJG,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAlBA,KAAAA,EAAAA,IAAAA,GAAmCQ,MAAM,CAANA,OAAAA,CAAnCR,IAAAA,EACCQ,MAAM,CAANA,OAAAA,CAAAA,GAAAA,GADF,SAACR,EAEDA,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAlBA,KAAAA,EAAAA,GAAAA,GAAkCQ,MAAM,CAANA,OAAAA,CAH7B,GAAA,CAIL,CACAX,OAAK,CAAGG,KAAK,CAAbH,KAAAA,CALK,CAAA,IAMA,CACL,IAAK,GAAIc,EAAC,CAAGX,KAAK,CAALA,MAAAA,CAAAA,MAAAA,CAAb,CAAA,CAAsCW,CAAC,EAAvC,CAAA,CAA8CA,CAA9C,EAAA,CAAmD,CACjD,GACGX,KAAK,CAALA,MAAAA,CAAAA,CAAAA,EAAAA,IAAAA,GAAyBQ,MAAM,CAANA,OAAAA,CAAzBR,IAAAA,EACCQ,MAAM,CAANA,OAAAA,CAAAA,GAAAA,GADF,SAACR,EAEDA,KAAK,CAALA,MAAAA,CAAAA,CAAAA,EAAAA,GAAAA,GAAwBQ,MAAM,CAANA,OAAAA,CAH1B,GAAA,CAIE,CACAX,OAAK,CAALA,CAAAA,CACA,MACD,CACF,CACF,CAED,GACEA,OAAK,GAAK,CAAVA,CAAAA,EACAW,MAAM,CAANA,OAAAA,CADAX,GAAAA,EAEAW,MAAM,CAANA,OAAAA,CAAAA,IAAAA,GAHF,SAAA,CAIE,CACA,MAAA,KAAA,CACD,CAED,GAAIX,OAAK,GAAK,CAAVA,CAAAA,EAAgBW,MAAM,CAANA,OAAAA,CAAAA,IAAAA,GAApB,SAAA,CAAuD,CAAA,GAAA,oBAAA,CACrD,GAAMV,SAAM,8BACPE,KAAK,CADK,MAAH,GAEV,CACEL,GAAG,CAAA,CAAA,mBAAA,CACDa,MAAM,CAANA,OAAAA,CADC,GAAA,IAAA,IAAA,EAAA,mBAAA,GAAA,IAAA,EAAA,CAAA,mBAAA,CACwBA,MAAM,CAANA,OAAAA,CAAe1B,IADvC,KAC+Cc,MAFpD,EAAA,CAGEd,IAAI,CAAE0B,MAAM,CAANA,OAAAA,CAHR,IAAA,CAIEI,IAAI,CAAEJ,MAAM,CAANA,OAAAA,CAJR,IAAA,CAKEzB,MAAM,CACJ,cAAc,CAACyB,MAAM,CAANA,OAAAA,CAAf,IAAc,CAAd,GAAA,SAAA,gCAESlB,cAAc,CAACkB,MAAM,CAANA,OAAAA,CADpB,IACmB,CAFvB,EAGSA,MAAM,CAANA,OAAAA,CAAezB,MAHxB,EAKIyB,MAAM,CAANA,OAAAA,CAAezB,MAXvB,CAFU,EAAZ,CAiBA,sCAAO,KAAP,MAEEe,MAFK,CAELA,QAFF,CAGED,KAAK,CAAEC,QAAM,CAANA,MAAAA,CAAgB,CAHzB,GAKD,CAED,GAAMG,OAAK,CAAGD,KAAK,CAALA,MAAAA,CAAd,OAAcA,CAAd,CAEA,GAAA,QAAA,CAEA,GAAIQ,MAAM,CAANA,OAAAA,CAAJ,KAAA,CAA0B,CACxBzB,OAAM,CACJ,MAAM,CAAN,OAAA,CAAA,MAAA,GAAA,SAAA,EACAO,cAAc,CAACW,MAAK,CAApBX,IAAc,CAAdA,GADA,SAAA,8CAGSA,cAAc,CAACW,MAAK,CADzB,IACmB,CAHvB,EAISA,MAAK,CAFV,MAFJ,EAKSO,MAAM,CAANA,OAAAA,CAAezB,MALxB,EAOIkB,MAAK,CARXlB,MAAAA,CADF,CAAA,IAUO,CACLA,OAAM,CACJ,cAAc,CAACkB,MAAK,CAApB,IAAc,CAAd,GAAA,SAAA,gCAESX,cAAc,CAACW,MAAK,CADzB,IACmB,CAFvB,EAGSO,MAAM,CAANA,OAAAA,CAAezB,MAHxB,EAKIyB,MAAM,CAANA,OAAAA,CANNzB,MAAAA,CAOD,CAED,sCAAO,KAAP,MAEEc,KAFK,CAELA,OAFF,CAGEC,MAAM,8BACDE,KAAK,CAALA,MAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CADG,OACHA,CADC,GAEJ,OAAM,GAAKC,MAAK,CAAhB,MAAA,EACCO,MAAM,CAANA,OAAAA,CAAAA,IAAAA,EAAuBA,MAAM,CAANA,OAAAA,CAAAA,IAAAA,GAAwBP,MAAK,CADrD,IAAA,gCAEI,MAFJ,MAIMW,IAAI,CAAA,CAAA,oBAAA,CAAEJ,MAAM,CAANA,OAAAA,CAAF,IAAA,IAAA,IAAA,EAAA,oBAAA,GAAA,IAAA,EAAA,CAAA,oBAAA,CAAyBP,MAAK,CAFpC,IAFJ,CAKMlB,MAAAA,CAAAA,OALN,GAOIiB,KAAK,CAALA,MAAAA,CATE,OASFA,CATA,EAHR,GAeD,CAED,MAAA,KAAA,CAEF,IAAA,SAAA,CACE,GAAIA,KAAK,CAALA,KAAAA,CAAJ,CAAA,CAAqB,CACnB,MAAO,OAAM,CAAN,iBAAA,CAAA,KAAA,CAEL,CACEpB,IAAI,CADN,KAAA,CAEEC,OAAO,CAAE,CAAEK,KAAK,CAAE,CAAT,CAFX,CAGE2B,MAAM,CAAEL,MAAM,CAHhB,MAAA,CAIEM,MAAM,CAAEN,MAAM,CAACM,MAJjB,CAFK,CAAP,OAAO,CAAP,CAUD,CAED,MAAA,KAAA,CAEF,QACE,MAAOC,WAAU,CAAVA,iBAAAA,CAAAA,KAAAA,CAAP,MAAOA,CAAP,CApQJ,CA5HA,CAAH,CAoYCC,cAAc,CAAEtC,YApYjB,EAHD,CA0YA,MAAA,OAAA,CACD","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  Route,\n  Router,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState<ParamList extends ParamListBase> =\n  NavigationState<ParamList> & {\n    /**\n     * Type of the router, in this case, it's stack.\n     */\n    type: 'stack';\n  };\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Route name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState<ParamListBase>,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map(\n          (route) =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${nanoid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = state.routes.filter(\n        (route) =>\n          routeNames.includes(route.name) &&\n          !routeKeyChanges.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId?.({ params: action.payload.params });\n\n            const route = id\n              ? state.routes.find(\n                  (route) =>\n                    route.name === action.payload.name &&\n                    id === getId?.({ params: route.params })\n                )\n              : undefined;\n\n            let routes: Route<string>[];\n\n            if (route) {\n              routes = state.routes.filter((r) => r.key !== route.key);\n              routes.push({\n                ...route,\n                params:\n                  routeParamList[action.payload.name] !== undefined\n                    ? {\n                        ...routeParamList[action.payload.name],\n                        ...action.payload.params,\n                      }\n                    : action.payload.params,\n              });\n            } else {\n              routes = [\n                ...state.routes,\n                {\n                  key: `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n            }\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.name !== undefined &&\n            !state.routeNames.includes(action.payload.name)\n          ) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            const getId =\n              // `getId` and `key` can't be used together\n              action.payload.key === undefined &&\n              action.payload.name !== undefined\n                ? options.routeGetIdList[action.payload.name]\n                : undefined;\n            const id = getId?.({ params: action.payload.params });\n\n            if (id) {\n              index = state.routes.findIndex(\n                (route) =>\n                  route.name === action.payload.name &&\n                  id === getId?.({ params: route.params })\n              );\n            } else if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  path: action.payload.path,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1,\n              };\n            }\n\n            const route = state.routes[index];\n\n            let params;\n\n            if (action.payload.merge) {\n              params =\n                action.payload.params !== undefined ||\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                      ...action.payload.params,\n                    }\n                  : route.params;\n            } else {\n              params =\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params,\n                    }\n                  : action.payload.params;\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                params !== route.params ||\n                (action.payload.path && action.payload.path !== route.path)\n                  ? {\n                      ...route,\n                      path: action.payload.path ?? route.path,\n                      params,\n                    }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n"]},"metadata":{},"sourceType":"module"}