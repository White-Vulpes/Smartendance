{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"to\",\"action\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import Text from\"react-native-web/dist/exports/Text\";import useLinkProps from\"./useLinkProps\";export default function Link(_ref){var to=_ref.to,action=_ref.action,rest=_objectWithoutProperties(_ref,_excluded);var props=useLinkProps({to:to,action:action});var onPress=function onPress(e){if('onPress'in rest){var _rest$onPress;(_rest$onPress=rest.onPress)===null||_rest$onPress===void 0?void 0:_rest$onPress.call(rest,e);}props.onPress(e);};return React.createElement(Text,_objectSpread(_objectSpread(_objectSpread({},props),rest),Platform.select({web:{onClick:onPress},default:{onPress:onPress}})));}","map":{"version":3,"sources":["Link.tsx"],"names":["rest","props","useLinkProps","to","action","onPress","e","web","onClick","default"],"mappings":"27BACA,MAAO,GAAP,MAAA,KAAA,OAAA,C,kHAGA,MAAA,aAAA,sBAoBA,cAAe,SAAA,KAAA,CAAA,IAAA,CAIM,CAJyD,GAAA,GAAA,CAIzD,IAJyD,CAAA,EAAA,CAAA,MAAA,CAIzD,IAJyD,CAAA,MAAA,CAGzEA,IAHyE,0BAIzD,IAJyD,YAK5E,GAAMC,MAAK,CAAGC,YAAY,CAAY,CAAEC,EAAF,CAAEA,EAAF,CAAMC,MAAAA,CAAAA,MAAN,CAAZ,CAA1B,CAEA,GAAMC,QAAO,CACXC,QADID,QACJC,CAAAA,CADc,CAEX,CACH,GAAI,WAAJ,KAAA,CAAuB,CAAA,GAAA,cAAA,CACrB,CAAA,aAAA,CAAA,IAAI,CAAJ,OAAA,IAAA,IAAA,EAAA,aAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CACD,CAEDL,KAAK,CAALA,OAAAA,CAAAA,CAAAA,EAPF,CAAA,CAUA,MAAO,MAAK,CAAL,aAAA,CAAA,IAAA,8CAA0B,KAA1B,EAA0B,IAA1B,EAGF,QAAQ,CAAR,MAAA,CAAgB,CACjBM,GAAG,CAAE,CAAEC,OAAO,CAAEH,OAAX,CADY,CAEjBI,OAAO,CAAE,CAAEJ,OAAAA,CAAAA,OAAF,CAFQ,CAAhB,CAHE,EAAP,CAQD","sourcesContent":["import type { NavigationAction } from '@react-navigation/core';\nimport * as React from 'react';\nimport { GestureResponderEvent, Platform, Text, TextProps } from 'react-native';\n\nimport useLinkProps from './useLinkProps';\nimport type { To } from './useLinkTo';\n\ntype Props<ParamList extends ReactNavigation.RootParamList> = {\n  to: To<ParamList>;\n  action?: NavigationAction;\n  target?: string;\n  onPress?: (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n} & (TextProps & { children: React.ReactNode });\n\n/**\n * Component to render link to another screen using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n * @param props.children Child elements to render the content.\n */\nexport default function Link<ParamList extends ReactNavigation.RootParamList>({\n  to,\n  action,\n  ...rest\n}: Props<ParamList>) {\n  const props = useLinkProps<ParamList>({ to, action });\n\n  const onPress = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    if ('onPress' in rest) {\n      rest.onPress?.(e);\n    }\n\n    props.onPress(e);\n  };\n\n  return React.createElement(Text, {\n    ...props,\n    ...rest,\n    ...Platform.select({\n      web: { onClick: onPress } as any,\n      default: { onPress },\n    }),\n  });\n}\n"]},"metadata":{},"sourceType":"module"}