{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import{useEffect,useRef}from'react';import{makeMutable}from\"../core\";import NativeReanimated from\"../NativeReanimated\";export var SensorType;(function(SensorType){SensorType[SensorType[\"ACCELEROMETER\"]=1]=\"ACCELEROMETER\";SensorType[SensorType[\"GYROSCOPE\"]=2]=\"GYROSCOPE\";SensorType[SensorType[\"GRAVITY\"]=3]=\"GRAVITY\";SensorType[SensorType[\"MAGNETIC_FIELD\"]=4]=\"MAGNETIC_FIELD\";SensorType[SensorType[\"ROTATION\"]=5]=\"ROTATION\";})(SensorType||(SensorType={}));export function useAnimatedSensor(sensorType,userConfig){var ref=useRef({sensor:null,unregister:function unregister(){},isAvailable:false,config:{interval:0}});if(ref.current.sensor===null){ref.current.config=_extends({interval:10},userConfig);var sensorData;if(sensorType===SensorType.ROTATION){sensorData={qw:0,qx:0,qy:0,qz:0,yaw:0,pitch:0,roll:0};}else{sensorData={x:0,y:0,z:0};}ref.current.sensor=makeMutable(sensorData);}useEffect(function(){ref.current.config=_extends({interval:10},userConfig);var id=NativeReanimated.registerSensor(sensorType,ref.current.config.interval,ref.current.sensor);if(id!==-1){ref.current.unregister=function(){return NativeReanimated.unregisterSensor(id);};ref.current.isAvailable=true;}else{ref.current.unregister=function(){};ref.current.isAvailable=false;}return function(){ref.current.unregister();};},[sensorType,userConfig]);return ref.current;}","map":{"version":3,"names":["useEffect","useRef","makeMutable","NativeReanimated","SensorType","useAnimatedSensor","sensorType","userConfig","ref","sensor","unregister","isAvailable","config","interval","current","sensorData","ROTATION","qw","qx","qy","qz","yaw","pitch","roll","x","y","z","id","registerSensor","unregisterSensor"],"sources":["C:/Users/DELL/Documents/ReactNative/Smartendance/node_modules/react-native-reanimated/lib/reanimated2/hook/useAnimatedSensor.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { makeMutable } from '../core';\nimport NativeReanimated from '../NativeReanimated';\nexport var SensorType;\n(function (SensorType) {\n    SensorType[SensorType[\"ACCELEROMETER\"] = 1] = \"ACCELEROMETER\";\n    SensorType[SensorType[\"GYROSCOPE\"] = 2] = \"GYROSCOPE\";\n    SensorType[SensorType[\"GRAVITY\"] = 3] = \"GRAVITY\";\n    SensorType[SensorType[\"MAGNETIC_FIELD\"] = 4] = \"MAGNETIC_FIELD\";\n    SensorType[SensorType[\"ROTATION\"] = 5] = \"ROTATION\";\n})(SensorType || (SensorType = {}));\nexport function useAnimatedSensor(sensorType, userConfig) {\n    const ref = useRef({\n        sensor: null,\n        unregister: () => {\n            // NOOP\n        },\n        isAvailable: false,\n        config: {\n            interval: 0,\n        },\n    });\n    if (ref.current.sensor === null) {\n        ref.current.config = Object.assign({ interval: 10 }, userConfig);\n        let sensorData;\n        if (sensorType === SensorType.ROTATION) {\n            sensorData = {\n                qw: 0,\n                qx: 0,\n                qy: 0,\n                qz: 0,\n                yaw: 0,\n                pitch: 0,\n                roll: 0,\n            };\n        }\n        else {\n            sensorData = {\n                x: 0,\n                y: 0,\n                z: 0,\n            };\n        }\n        ref.current.sensor = makeMutable(sensorData);\n    }\n    useEffect(() => {\n        ref.current.config = Object.assign({ interval: 10 }, userConfig);\n        const id = NativeReanimated.registerSensor(sensorType, ref.current.config.interval, ref.current.sensor);\n        if (id !== -1) {\n            // if sensor is available\n            ref.current.unregister = () => NativeReanimated.unregisterSensor(id);\n            ref.current.isAvailable = true;\n        }\n        else {\n            // if sensor is unavailable\n            ref.current.unregister = () => {\n                // NOOP\n            };\n            ref.current.isAvailable = false;\n        }\n        return () => {\n            ref.current.unregister();\n        };\n    }, [sensorType, userConfig]);\n    return ref.current;\n}\n"],"mappings":"qDAAA,OAASA,SAAT,CAAoBC,MAApB,KAAkC,OAAlC,CACA,OAASC,WAAT,eACA,MAAOC,iBAAP,2BACA,MAAO,IAAIC,WAAJ,CACP,CAAC,SAAUA,UAAV,CAAsB,CACnBA,UAAU,CAACA,UAAU,CAAC,eAAD,CAAV,CAA8B,CAA/B,CAAV,CAA8C,eAA9C,CACAA,UAAU,CAACA,UAAU,CAAC,WAAD,CAAV,CAA0B,CAA3B,CAAV,CAA0C,WAA1C,CACAA,UAAU,CAACA,UAAU,CAAC,SAAD,CAAV,CAAwB,CAAzB,CAAV,CAAwC,SAAxC,CACAA,UAAU,CAACA,UAAU,CAAC,gBAAD,CAAV,CAA+B,CAAhC,CAAV,CAA+C,gBAA/C,CACAA,UAAU,CAACA,UAAU,CAAC,UAAD,CAAV,CAAyB,CAA1B,CAAV,CAAyC,UAAzC,CACH,CAND,EAMGA,UAAU,GAAKA,UAAU,CAAG,EAAlB,CANb,EAOA,MAAO,SAASC,kBAAT,CAA2BC,UAA3B,CAAuCC,UAAvC,CAAmD,CACtD,GAAMC,IAAG,CAAGP,MAAM,CAAC,CACfQ,MAAM,CAAE,IADO,CAEfC,UAAU,CAAE,qBAAM,CAEjB,CAJc,CAKfC,WAAW,CAAE,KALE,CAMfC,MAAM,CAAE,CACJC,QAAQ,CAAE,CADN,CANO,CAAD,CAAlB,CAUA,GAAIL,GAAG,CAACM,OAAJ,CAAYL,MAAZ,GAAuB,IAA3B,CAAiC,CAC7BD,GAAG,CAACM,OAAJ,CAAYF,MAAZ,CAAqB,SAAc,CAAEC,QAAQ,CAAE,EAAZ,CAAd,CAAgCN,UAAhC,CAArB,CACA,GAAIQ,WAAJ,CACA,GAAIT,UAAU,GAAKF,UAAU,CAACY,QAA9B,CAAwC,CACpCD,UAAU,CAAG,CACTE,EAAE,CAAE,CADK,CAETC,EAAE,CAAE,CAFK,CAGTC,EAAE,CAAE,CAHK,CAITC,EAAE,CAAE,CAJK,CAKTC,GAAG,CAAE,CALI,CAMTC,KAAK,CAAE,CANE,CAOTC,IAAI,CAAE,CAPG,CAAb,CASH,CAVD,IAWK,CACDR,UAAU,CAAG,CACTS,CAAC,CAAE,CADM,CAETC,CAAC,CAAE,CAFM,CAGTC,CAAC,CAAE,CAHM,CAAb,CAKH,CACDlB,GAAG,CAACM,OAAJ,CAAYL,MAAZ,CAAqBP,WAAW,CAACa,UAAD,CAAhC,CACH,CACDf,SAAS,CAAC,UAAM,CACZQ,GAAG,CAACM,OAAJ,CAAYF,MAAZ,CAAqB,SAAc,CAAEC,QAAQ,CAAE,EAAZ,CAAd,CAAgCN,UAAhC,CAArB,CACA,GAAMoB,GAAE,CAAGxB,gBAAgB,CAACyB,cAAjB,CAAgCtB,UAAhC,CAA4CE,GAAG,CAACM,OAAJ,CAAYF,MAAZ,CAAmBC,QAA/D,CAAyEL,GAAG,CAACM,OAAJ,CAAYL,MAArF,CAAX,CACA,GAAIkB,EAAE,GAAK,CAAC,CAAZ,CAAe,CAEXnB,GAAG,CAACM,OAAJ,CAAYJ,UAAZ,CAAyB,iBAAMP,iBAAgB,CAAC0B,gBAAjB,CAAkCF,EAAlC,CAAN,EAAzB,CACAnB,GAAG,CAACM,OAAJ,CAAYH,WAAZ,CAA0B,IAA1B,CACH,CAJD,IAKK,CAEDH,GAAG,CAACM,OAAJ,CAAYJ,UAAZ,CAAyB,UAAM,CAE9B,CAFD,CAGAF,GAAG,CAACM,OAAJ,CAAYH,WAAZ,CAA0B,KAA1B,CACH,CACD,MAAO,WAAM,CACTH,GAAG,CAACM,OAAJ,CAAYJ,UAAZ,GACH,CAFD,CAGH,CAlBQ,CAkBN,CAACJ,UAAD,CAAaC,UAAb,CAlBM,CAAT,CAmBA,MAAOC,IAAG,CAACM,OAAX,CACH"},"metadata":{},"sourceType":"module"}