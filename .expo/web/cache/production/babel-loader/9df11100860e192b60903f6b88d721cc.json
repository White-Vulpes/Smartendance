{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";export default function fromEntries(entries){return entries.reduce(function(acc,_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(acc.hasOwnProperty(k)){throw new Error(\"A value for key '\"+k+\"' already exists in the object.\");}acc[k]=v;return acc;},{});}","map":{"version":3,"sources":["fromEntries.tsx"],"names":["acc"],"mappings":"iEACA,cAAe,SAAA,YAAA,CAAA,OAAA,CAEb,CACA,MAAO,QAAO,CAAP,MAAA,CAAe,SAAA,GAAA,CAAA,IAAA,CAAiB,CAAX,yBAAW,IAAX,IAAA,CAAA,UAAA,CAAA,UAC1B,GAAIA,GAAG,CAAHA,cAAAA,CAAJ,CAAIA,CAAJ,CAA2B,CACzB,KAAM,IAAA,MAAA,qBAAN,CAAM,mCAAN,CACD,CAEDA,GAAG,CAAHA,CAAG,CAAHA,CAAAA,CAAAA,CACA,MAAA,IAAA,CANK,CAAA,CAAP,EAAO,CAAP,CAQD","sourcesContent":["// Object.fromEntries is not available in older iOS versions\nexport default function fromEntries<K extends string, V>(\n  entries: (readonly [K, V])[]\n) {\n  return entries.reduce((acc, [k, v]) => {\n    if (acc.hasOwnProperty(k)) {\n      throw new Error(`A value for key '${k}' already exists in the object.`);\n    }\n\n    acc[k] = v;\n    return acc;\n  }, {} as Record<K, V>);\n}\n"]},"metadata":{},"sourceType":"module"}