{"ast":null,"code":"import normalizeColor from\"../../modules/normalizeColor\";import normalizeValueWithProperty from\"./normalizeValueWithProperty\";var defaultOffset={height:0,width:0};var resolveShadowValue=function resolveShadowValue(style){var shadowColor=style.shadowColor,shadowOffset=style.shadowOffset,shadowOpacity=style.shadowOpacity,shadowRadius=style.shadowRadius;var _ref=shadowOffset||defaultOffset,height=_ref.height,width=_ref.width;var offsetX=normalizeValueWithProperty(width);var offsetY=normalizeValueWithProperty(height);var blurRadius=normalizeValueWithProperty(shadowRadius||0);var color=normalizeColor(shadowColor||'black',shadowOpacity);if(color!=null&&offsetX!=null&&offsetY!=null&&blurRadius!=null){return offsetX+\" \"+offsetY+\" \"+blurRadius+\" \"+color;}};export default resolveShadowValue;","map":{"version":3,"names":["normalizeColor","normalizeValueWithProperty","defaultOffset","height","width","resolveShadowValue","style","shadowColor","shadowOffset","shadowOpacity","shadowRadius","_ref","offsetX","offsetY","blurRadius","color"],"sources":["C:/Users/DELL/Documents/ReactNative/Smartendance/node_modules/react-native-web/dist/exports/StyleSheet/resolveShadowValue.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport normalizeColor from '../../modules/normalizeColor';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\n\nvar resolveShadowValue = function resolveShadowValue(style) {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\n\nexport default resolveShadowValue;"],"mappings":"AAQA,MAAOA,eAAP,oCACA,MAAOC,2BAAP,oCACA,GAAIC,cAAa,CAAG,CAClBC,MAAM,CAAE,CADU,CAElBC,KAAK,CAAE,CAFW,CAApB,CAKA,GAAIC,mBAAkB,CAAG,QAASA,mBAAT,CAA4BC,KAA5B,CAAmC,CAC1D,GAAIC,YAAW,CAAGD,KAAK,CAACC,WAAxB,CACIC,YAAY,CAAGF,KAAK,CAACE,YADzB,CAEIC,aAAa,CAAGH,KAAK,CAACG,aAF1B,CAGIC,YAAY,CAAGJ,KAAK,CAACI,YAHzB,CAKA,GAAIC,KAAI,CAAGH,YAAY,EAAIN,aAA3B,CACIC,MAAM,CAAGQ,IAAI,CAACR,MADlB,CAEIC,KAAK,CAAGO,IAAI,CAACP,KAFjB,CAIA,GAAIQ,QAAO,CAAGX,0BAA0B,CAACG,KAAD,CAAxC,CACA,GAAIS,QAAO,CAAGZ,0BAA0B,CAACE,MAAD,CAAxC,CACA,GAAIW,WAAU,CAAGb,0BAA0B,CAACS,YAAY,EAAI,CAAjB,CAA3C,CACA,GAAIK,MAAK,CAAGf,cAAc,CAACO,WAAW,EAAI,OAAhB,CAAyBE,aAAzB,CAA1B,CAEA,GAAIM,KAAK,EAAI,IAAT,EAAiBH,OAAO,EAAI,IAA5B,EAAoCC,OAAO,EAAI,IAA/C,EAAuDC,UAAU,EAAI,IAAzE,CAA+E,CAC7E,MAAOF,QAAO,CAAG,GAAV,CAAgBC,OAAhB,CAA0B,GAA1B,CAAgCC,UAAhC,CAA6C,GAA7C,CAAmDC,KAA1D,CACD,CACF,CAlBD,CAoBA,cAAeV,mBAAf"},"metadata":{},"sourceType":"module"}