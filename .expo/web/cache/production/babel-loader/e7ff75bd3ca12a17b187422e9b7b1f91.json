{"ast":null,"code":"import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import{shouldBeUseWeb}from\"./PlatformChecker\";export function getTag(view){return findNodeHandle(view);}var isNativeIndefined=shouldBeUseWeb();export var measure=function(){var _f=function _f(animatedRef){if(!_WORKLET||isNativeIndefined){console.warn('[reanimated.measure] method cannot be used for web or Chrome Debugger');return{x:NaN,y:NaN,width:NaN,height:NaN,pageX:NaN,pageY:NaN};}var viewTag=animatedRef();var result=_measure(viewTag);if(result.x===-1234567){throw new Error(\"The view with tag \"+viewTag+\" could not be measured\");}return result;};_f._closure={isNativeIndefined:isNativeIndefined,NaN:NaN};_f.asString=\"function measure(animatedRef){const{isNativeIndefined,NaN}=jsThis._closure;{if(!_WORKLET||isNativeIndefined){console.warn('[reanimated.measure] method cannot be used for web or Chrome Debugger');return{x:NaN,y:NaN,width:NaN,height:NaN,pageX:NaN,pageY:NaN};}const viewTag=animatedRef();const result=_measure(viewTag);if(result.x===-1234567){throw new Error(\\\"The view with tag \\\"+viewTag+\\\" could not be measured\\\");}return result;}}\";_f.__workletHash=16871416275568;_f.__location=\"C:\\\\Users\\\\DELL\\\\Documents\\\\ReactNative\\\\Smartendance\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\NativeMethods.js (7:7)\";return _f;}();export var scrollTo=function(){var _f=function _f(animatedRef,x,y,animated){if(!_WORKLET||isNativeIndefined){return;}var viewTag=animatedRef();_scrollTo(viewTag,x,y,animated);};_f._closure={isNativeIndefined:isNativeIndefined};_f.asString=\"function scrollTo(animatedRef,x,y,animated){const{isNativeIndefined}=jsThis._closure;{if(!_WORKLET||isNativeIndefined){return;}const viewTag=animatedRef();_scrollTo(viewTag,x,y,animated);}}\";_f.__workletHash=15726952508258;_f.__location=\"C:\\\\Users\\\\DELL\\\\Documents\\\\ReactNative\\\\Smartendance\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\NativeMethods.js (27:7)\";return _f;}();export var setGestureState=function(){var _f=function _f(handlerTag,newState){if(!_WORKLET||isNativeIndefined){console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');return;}_setGestureState(handlerTag,newState);};_f._closure={isNativeIndefined:isNativeIndefined};_f.asString=\"function setGestureState(handlerTag,newState){const{isNativeIndefined}=jsThis._closure;{if(!_WORKLET||isNativeIndefined){console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');return;}_setGestureState(handlerTag,newState);}}\";_f.__workletHash=3665262151737;_f.__location=\"C:\\\\Users\\\\DELL\\\\Documents\\\\ReactNative\\\\Smartendance\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\NativeMethods.js (35:7)\";return _f;}();","map":{"version":3,"names":["shouldBeUseWeb","getTag","view","findNodeHandle","isNativeIndefined","measure","animatedRef","_WORKLET","console","warn","x","NaN","y","width","height","pageX","pageY","viewTag","result","_measure","Error","scrollTo","animated","_scrollTo","setGestureState","handlerTag","newState","_setGestureState"],"sources":["C:/Users/DELL/Documents/ReactNative/Smartendance/node_modules/react-native-reanimated/lib/reanimated2/NativeMethods.js"],"sourcesContent":["import { findNodeHandle } from 'react-native';\nimport { shouldBeUseWeb } from './PlatformChecker';\nexport function getTag(view) {\n    return findNodeHandle(view);\n}\nconst isNativeIndefined = shouldBeUseWeb();\nexport function measure(animatedRef) {\n    'worklet';\n    if (!_WORKLET || isNativeIndefined) {\n        console.warn('[reanimated.measure] method cannot be used for web or Chrome Debugger');\n        return {\n            x: NaN,\n            y: NaN,\n            width: NaN,\n            height: NaN,\n            pageX: NaN,\n            pageY: NaN,\n        };\n    }\n    const viewTag = animatedRef();\n    const result = _measure(viewTag);\n    if (result.x === -1234567) {\n        throw new Error(`The view with tag ${viewTag} could not be measured`);\n    }\n    return result;\n}\nexport function scrollTo(animatedRef, x, y, animated) {\n    'worklet';\n    if (!_WORKLET || isNativeIndefined) {\n        return;\n    }\n    const viewTag = animatedRef();\n    _scrollTo(viewTag, x, y, animated);\n}\nexport function setGestureState(handlerTag, newState) {\n    'worklet';\n    if (!_WORKLET || isNativeIndefined) {\n        console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');\n        return;\n    }\n    _setGestureState(handlerTag, newState);\n}\n"],"mappings":"yEACA,OAASA,cAAT,yBACA,MAAO,SAASC,OAAT,CAAgBC,IAAhB,CAAsB,CACzB,MAAOC,eAAc,CAACD,IAAD,CAArB,CACH,CACD,GAAME,kBAAiB,CAAGJ,cAAc,EAAxC,CACA,UAAgBK,QAAhB,+BAAwBC,WAAxB,CAAqC,CAEjC,GAAI,CAACC,QAAD,EAAaH,iBAAjB,CAAoC,CAChCI,OAAO,CAACC,IAAR,CAAa,uEAAb,EACA,MAAO,CACHC,CAAC,CAAEC,GADA,CAEHC,CAAC,CAAED,GAFA,CAGHE,KAAK,CAAEF,GAHJ,CAIHG,MAAM,CAAEH,GAJL,CAKHI,KAAK,CAAEJ,GALJ,CAMHK,KAAK,CAAEL,GANJ,CAAP,CAQH,CACD,GAAMM,QAAO,CAAGX,WAAW,EAA3B,CACA,GAAMY,OAAM,CAAGC,QAAQ,CAACF,OAAD,CAAvB,CACA,GAAIC,MAAM,CAACR,CAAP,GAAa,CAAC,OAAlB,CAA2B,CACvB,KAAM,IAAIU,MAAJ,sBAA+BH,OAA/B,0BAAN,CACH,CACD,MAAOC,OAAP,CACH,CAnBD,gCAJmBd,iBAInB,KAIaO,GAJb,soBAoBA,UAAgBU,SAAhB,+BAAyBf,WAAzB,CAAsCI,CAAtC,CAAyCE,CAAzC,CAA4CU,QAA5C,CAAsD,CAElD,GAAI,CAACf,QAAD,EAAaH,iBAAjB,CAAoC,CAChC,OACH,CACD,GAAMa,QAAO,CAAGX,WAAW,EAA3B,CACAiB,SAAS,CAACN,OAAD,CAAUP,CAAV,CAAaE,CAAb,CAAgBU,QAAhB,CAAT,CACH,CAPD,gCAxBmBlB,iBAwBnB,oZAQA,UAAgBoB,gBAAhB,+BAAgCC,UAAhC,CAA4CC,QAA5C,CAAsD,CAElD,GAAI,CAACnB,QAAD,EAAaH,iBAAjB,CAAoC,CAChCI,OAAO,CAACC,IAAR,CAAa,uEAAb,EACA,OACH,CACDkB,gBAAgB,CAACF,UAAD,CAAaC,QAAb,CAAhB,CACH,CAPD,gCAhCmBtB,iBAgCnB"},"metadata":{},"sourceType":"module"}