{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import Hammer from'@egjs/hammerjs';import{MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD,MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD}from\"./constants\";import DraggingGestureHandler from\"./DraggingGestureHandler\";import{isValidNumber,isnan,TEST_MIN_IF_NOT_NAN,VEC_LEN_SQ}from\"./utils\";import{State}from\"../State\";var PanGestureHandler=function(_DraggingGestureHandl){_inherits(PanGestureHandler,_DraggingGestureHandl);var _super=_createSuper(PanGestureHandler);function PanGestureHandler(){_classCallCheck(this,PanGestureHandler);return _super.apply(this,arguments);}_createClass(PanGestureHandler,[{key:\"name\",get:function get(){return'pan';}},{key:\"NativeGestureClass\",get:function get(){return Hammer.Pan;}},{key:\"getHammerConfig\",value:function getHammerConfig(){return _objectSpread(_objectSpread({},_get(_getPrototypeOf(PanGestureHandler.prototype),\"getHammerConfig\",this).call(this)),{},{direction:this.getDirection()});}},{key:\"getState\",value:function getState(type){var nextState=_get(_getPrototypeOf(PanGestureHandler.prototype),\"getState\",this).call(this,type);if(this.previousState===State.UNDETERMINED&&nextState===State.ACTIVE){return State.BEGAN;}return nextState;}},{key:\"getDirection\",value:function getDirection(){var config=this.getConfig();var activeOffsetXStart=config.activeOffsetXStart,activeOffsetXEnd=config.activeOffsetXEnd,activeOffsetYStart=config.activeOffsetYStart,activeOffsetYEnd=config.activeOffsetYEnd,minDist=config.minDist;var directions=[];var horizontalDirections=[];if(!isnan(minDist)){return Hammer.DIRECTION_ALL;}if(!isnan(activeOffsetXStart))horizontalDirections.push(Hammer.DIRECTION_LEFT);if(!isnan(activeOffsetXEnd))horizontalDirections.push(Hammer.DIRECTION_RIGHT);if(horizontalDirections.length===2)horizontalDirections=[Hammer.DIRECTION_HORIZONTAL];directions=directions.concat(horizontalDirections);var verticalDirections=[];if(!isnan(activeOffsetYStart))verticalDirections.push(Hammer.DIRECTION_UP);if(!isnan(activeOffsetYEnd))verticalDirections.push(Hammer.DIRECTION_DOWN);if(verticalDirections.length===2)verticalDirections=[Hammer.DIRECTION_VERTICAL];directions=directions.concat(verticalDirections);if(!directions.length){return Hammer.DIRECTION_NONE;}if(directions[0]===Hammer.DIRECTION_HORIZONTAL&&directions[1]===Hammer.DIRECTION_VERTICAL){return Hammer.DIRECTION_ALL;}if(horizontalDirections.length&&verticalDirections.length){return Hammer.DIRECTION_ALL;}return directions[0];}},{key:\"getConfig\",value:function getConfig(){if(!this.hasCustomActivationCriteria){return{minDistSq:10};}return this.config;}},{key:\"shouldFailUnderCustomCriteria\",value:function shouldFailUnderCustomCriteria(_ref,criteria){var deltaX=_ref.deltaX,deltaY=_ref.deltaY;return!isnan(criteria.failOffsetXStart)&&deltaX<criteria.failOffsetXStart||!isnan(criteria.failOffsetXEnd)&&deltaX>criteria.failOffsetXEnd||!isnan(criteria.failOffsetYStart)&&deltaY<criteria.failOffsetYStart||!isnan(criteria.failOffsetYEnd)&&deltaY>criteria.failOffsetYEnd;}},{key:\"shouldActivateUnderCustomCriteria\",value:function shouldActivateUnderCustomCriteria(_ref2,criteria){var deltaX=_ref2.deltaX,deltaY=_ref2.deltaY,velocity=_ref2.velocity;return!isnan(criteria.activeOffsetXStart)&&deltaX<criteria.activeOffsetXStart||!isnan(criteria.activeOffsetXEnd)&&deltaX>criteria.activeOffsetXEnd||!isnan(criteria.activeOffsetYStart)&&deltaY<criteria.activeOffsetYStart||!isnan(criteria.activeOffsetYEnd)&&deltaY>criteria.activeOffsetYEnd||TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({x:deltaX,y:deltaY}),criteria.minDistSq)||TEST_MIN_IF_NOT_NAN(velocity.x,criteria.minVelocityX)||TEST_MIN_IF_NOT_NAN(velocity.y,criteria.minVelocityY)||TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity),criteria.minVelocitySq);}},{key:\"shouldMultiFingerPanFail\",value:function shouldMultiFingerPanFail(_ref3){var pointerLength=_ref3.pointerLength,scale=_ref3.scale,deltaRotation=_ref3.deltaRotation;if(pointerLength<=1){return false;}var deltaScale=Math.abs(scale-1);var absDeltaRotation=Math.abs(deltaRotation);if(deltaScale>MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD){return true;}if(absDeltaRotation>MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD){return true;}return false;}},{key:\"updateHasCustomActivationCriteria\",value:function updateHasCustomActivationCriteria(criteria){return isValidNumber(criteria.minDistSq)||isValidNumber(criteria.minVelocityX)||isValidNumber(criteria.minVelocityY)||isValidNumber(criteria.minVelocitySq)||isValidNumber(criteria.activeOffsetXStart)||isValidNumber(criteria.activeOffsetXEnd)||isValidNumber(criteria.activeOffsetYStart)||isValidNumber(criteria.activeOffsetYEnd);}},{key:\"isGestureEnabledForEvent\",value:function isGestureEnabledForEvent(props,_recognizer,inputData){if(this.shouldFailUnderCustomCriteria(inputData,props)){return{failed:true};}var velocity={x:inputData.velocityX,y:inputData.velocityY};if(this.hasCustomActivationCriteria&&this.shouldActivateUnderCustomCriteria({deltaX:inputData.deltaX,deltaY:inputData.deltaY,velocity:velocity},props)){if(this.shouldMultiFingerPanFail({pointerLength:inputData.maxPointers,scale:inputData.scale,deltaRotation:inputData.deltaRotation})){return{failed:true};}return{success:true};}return{success:false};}}]);return PanGestureHandler;}(DraggingGestureHandler);export default PanGestureHandler;","map":{"version":3,"sources":["PanGestureHandler.ts"],"names":["name","NativeGestureClass","Hammer","getHammerConfig","direction","getState","nextState","State","getDirection","config","minDist","directions","horizontalDirections","isnan","verticalDirections","getConfig","minDistSq","shouldFailUnderCustomCriteria","deltaY","criteria","deltaX","shouldActivateUnderCustomCriteria","velocity","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","x","y","shouldMultiFingerPanFail","deltaRotation","pointerLength","deltaScale","Math","scale","absDeltaRotation","updateHasCustomActivationCriteria","isValidNumber","isGestureEnabledForEvent","failed","inputData","velocityY","success"],"mappings":"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","sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport {\n  EventMap,\n  MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD,\n  MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD,\n} from './constants';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\nimport { State } from '../State';\n\nimport { Config, HammerInputExt } from './GestureHandler';\nclass PanGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'pan';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pan;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      direction: this.getDirection(),\n    };\n  }\n\n  getState(type: keyof typeof EventMap) {\n    const nextState = super.getState(type);\n    // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n    if (\n      this.previousState === State.UNDETERMINED &&\n      nextState === State.ACTIVE\n    ) {\n      return State.BEGAN;\n    }\n    return nextState;\n  }\n\n  getDirection() {\n    const config = this.getConfig();\n    const {\n      activeOffsetXStart,\n      activeOffsetXEnd,\n      activeOffsetYStart,\n      activeOffsetYEnd,\n      minDist,\n    } = config;\n    let directions: number[] = [];\n    let horizontalDirections = [];\n\n    if (!isnan(minDist)) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    if (!isnan(activeOffsetXStart))\n      horizontalDirections.push(Hammer.DIRECTION_LEFT);\n    if (!isnan(activeOffsetXEnd))\n      horizontalDirections.push(Hammer.DIRECTION_RIGHT);\n    if (horizontalDirections.length === 2)\n      horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\n\n    directions = directions.concat(horizontalDirections);\n    let verticalDirections = [];\n\n    if (!isnan(activeOffsetYStart))\n      verticalDirections.push(Hammer.DIRECTION_UP);\n    if (!isnan(activeOffsetYEnd))\n      verticalDirections.push(Hammer.DIRECTION_DOWN);\n\n    if (verticalDirections.length === 2)\n      verticalDirections = [Hammer.DIRECTION_VERTICAL];\n\n    directions = directions.concat(verticalDirections);\n\n    if (!directions.length) {\n      return Hammer.DIRECTION_NONE;\n    }\n    if (\n      directions[0] === Hammer.DIRECTION_HORIZONTAL &&\n      directions[1] === Hammer.DIRECTION_VERTICAL\n    ) {\n      return Hammer.DIRECTION_ALL;\n    }\n    if (horizontalDirections.length && verticalDirections.length) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    return directions[0];\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        minDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { deltaX, deltaY }: HammerInputExt,\n    criteria: any\n  ) {\n    return (\n      (!isnan(criteria.failOffsetXStart) &&\n        deltaX < criteria.failOffsetXStart) ||\n      (!isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd) ||\n      (!isnan(criteria.failOffsetYStart) &&\n        deltaY < criteria.failOffsetYStart) ||\n      (!isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd)\n    );\n  }\n\n  shouldActivateUnderCustomCriteria(\n    { deltaX, deltaY, velocity }: any,\n    criteria: any\n  ) {\n    return (\n      (!isnan(criteria.activeOffsetXStart) &&\n        deltaX < criteria.activeOffsetXStart) ||\n      (!isnan(criteria.activeOffsetXEnd) &&\n        deltaX > criteria.activeOffsetXEnd) ||\n      (!isnan(criteria.activeOffsetYStart) &&\n        deltaY < criteria.activeOffsetYStart) ||\n      (!isnan(criteria.activeOffsetYEnd) &&\n        deltaY > criteria.activeOffsetYEnd) ||\n      TEST_MIN_IF_NOT_NAN(\n        VEC_LEN_SQ({ x: deltaX, y: deltaY }),\n        criteria.minDistSq\n      ) ||\n      TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) ||\n      TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) ||\n      TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq)\n    );\n  }\n\n  shouldMultiFingerPanFail({\n    pointerLength,\n    scale,\n    deltaRotation,\n  }: {\n    deltaRotation: number;\n    pointerLength: number;\n    scale: number;\n  }) {\n    if (pointerLength <= 1) {\n      return false;\n    }\n\n    // Test if the pan had too much pinching or rotating.\n    const deltaScale = Math.abs(scale - 1);\n    const absDeltaRotation = Math.abs(deltaRotation);\n    if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n    if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n\n    return false;\n  }\n\n  updateHasCustomActivationCriteria(\n    criteria: Config & { minVelocityX?: number; minVelocityY?: number }\n  ) {\n    return (\n      isValidNumber(criteria.minDistSq) ||\n      isValidNumber(criteria.minVelocityX) ||\n      isValidNumber(criteria.minVelocityY) ||\n      isValidNumber(criteria.minVelocitySq) ||\n      isValidNumber(criteria.activeOffsetXStart) ||\n      isValidNumber(criteria.activeOffsetXEnd) ||\n      isValidNumber(criteria.activeOffsetYStart) ||\n      isValidNumber(criteria.activeOffsetYEnd)\n    );\n  }\n\n  isGestureEnabledForEvent(\n    props: any,\n    _recognizer: any,\n    inputData: HammerInputExt & { deltaRotation: number }\n  ) {\n    if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n      return { failed: true };\n    }\n\n    const velocity = { x: inputData.velocityX, y: inputData.velocityY };\n    if (\n      this.hasCustomActivationCriteria &&\n      this.shouldActivateUnderCustomCriteria(\n        { deltaX: inputData.deltaX, deltaY: inputData.deltaY, velocity },\n        props\n      )\n    ) {\n      if (\n        this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation,\n        })\n      ) {\n        return {\n          failed: true,\n        };\n      }\n      return { success: true };\n    }\n    return { success: false };\n  }\n}\n\nexport default PanGestureHandler;\n"]},"metadata":{},"sourceType":"module"}