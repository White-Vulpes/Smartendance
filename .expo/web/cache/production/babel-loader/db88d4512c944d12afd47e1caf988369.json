{"ast":null,"code":"import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import{Component}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import{PanGestureHandler}from\"../handlers/PanGestureHandler\";import{TapGestureHandler}from\"../handlers/TapGestureHandler\";import{State}from\"../State\";var DRAG_TOSS=0.05;var Swipeable=function(_Component){_inherits(Swipeable,_Component);var _super=_createSuper(Swipeable);function Swipeable(_props){var _this;_classCallCheck(this,Swipeable);_this=_super.call(this,_props);_defineProperty(_assertThisInitialized(_this),\"onGestureEvent\",void 0);_defineProperty(_assertThisInitialized(_this),\"transX\",void 0);_defineProperty(_assertThisInitialized(_this),\"showLeftAction\",void 0);_defineProperty(_assertThisInitialized(_this),\"leftActionTranslate\",void 0);_defineProperty(_assertThisInitialized(_this),\"showRightAction\",void 0);_defineProperty(_assertThisInitialized(_this),\"rightActionTranslate\",void 0);_defineProperty(_assertThisInitialized(_this),\"updateAnimatedEvent\",function(props,state){var friction=props.friction,overshootFriction=props.overshootFriction;var dragX=state.dragX,rowTranslation=state.rowTranslation,_state$leftWidth=state.leftWidth,leftWidth=_state$leftWidth===void 0?0:_state$leftWidth,_state$rowWidth=state.rowWidth,rowWidth=_state$rowWidth===void 0?0:_state$rowWidth;var _state$rightOffset=state.rightOffset,rightOffset=_state$rightOffset===void 0?rowWidth:_state$rightOffset;var rightWidth=Math.max(0,rowWidth-rightOffset);var _props$overshootLeft=props.overshootLeft,overshootLeft=_props$overshootLeft===void 0?leftWidth>0:_props$overshootLeft,_props$overshootRight=props.overshootRight,overshootRight=_props$overshootRight===void 0?rightWidth>0:_props$overshootRight;var transX=Animated.add(rowTranslation,dragX.interpolate({inputRange:[0,friction],outputRange:[0,1]})).interpolate({inputRange:[-rightWidth-1,-rightWidth,leftWidth,leftWidth+1],outputRange:[-rightWidth-(overshootRight?1/overshootFriction:0),-rightWidth,leftWidth,leftWidth+(overshootLeft?1/overshootFriction:0)]});_this.transX=transX;_this.showLeftAction=leftWidth>0?transX.interpolate({inputRange:[-1,0,leftWidth],outputRange:[0,0,1]}):new Animated.Value(0);_this.leftActionTranslate=_this.showLeftAction.interpolate({inputRange:[0,Number.MIN_VALUE],outputRange:[-10000,0],extrapolate:'clamp'});_this.showRightAction=rightWidth>0?transX.interpolate({inputRange:[-rightWidth,0,1],outputRange:[1,0,0]}):new Animated.Value(0);_this.rightActionTranslate=_this.showRightAction.interpolate({inputRange:[0,Number.MIN_VALUE],outputRange:[-10000,0],extrapolate:'clamp'});});_defineProperty(_assertThisInitialized(_this),\"onTapHandlerStateChange\",function(_ref){var nativeEvent=_ref.nativeEvent;if(nativeEvent.oldState===State.ACTIVE){_this.close();}});_defineProperty(_assertThisInitialized(_this),\"onHandlerStateChange\",function(ev){if(ev.nativeEvent.oldState===State.ACTIVE){_this.handleRelease(ev);}});_defineProperty(_assertThisInitialized(_this),\"handleRelease\",function(ev){var _ev$nativeEvent=ev.nativeEvent,velocityX=_ev$nativeEvent.velocityX,dragX=_ev$nativeEvent.translationX;var _this$state=_this.state,_this$state$leftWidth=_this$state.leftWidth,leftWidth=_this$state$leftWidth===void 0?0:_this$state$leftWidth,_this$state$rowWidth=_this$state.rowWidth,rowWidth=_this$state$rowWidth===void 0?0:_this$state$rowWidth,rowState=_this$state.rowState;var _this$state$rightOffs=_this.state.rightOffset,rightOffset=_this$state$rightOffs===void 0?rowWidth:_this$state$rightOffs;var rightWidth=rowWidth-rightOffset;var _this$props5=_this.props,friction=_this$props5.friction,_this$props5$leftThre=_this$props5.leftThreshold,leftThreshold=_this$props5$leftThre===void 0?leftWidth/2:_this$props5$leftThre,_this$props5$rightThr=_this$props5.rightThreshold,rightThreshold=_this$props5$rightThr===void 0?rightWidth/2:_this$props5$rightThr;var startOffsetX=_this.currentOffset()+dragX/friction;var translationX=(dragX+DRAG_TOSS*velocityX)/friction;var toValue=0;if(rowState===0){if(translationX>leftThreshold){toValue=leftWidth;}else if(translationX<-rightThreshold){toValue=-rightWidth;}}else if(rowState===1){if(translationX>-leftThreshold){toValue=leftWidth;}}else{if(translationX<rightThreshold){toValue=-rightWidth;}}_this.animateRow(startOffsetX,toValue,velocityX/friction);});_defineProperty(_assertThisInitialized(_this),\"animateRow\",function(fromValue,toValue,velocityX){var _this$state2=_this.state,dragX=_this$state2.dragX,rowTranslation=_this$state2.rowTranslation;dragX.setValue(0);rowTranslation.setValue(fromValue);_this.setState({rowState:Math.sign(toValue)});Animated.spring(rowTranslation,_objectSpread({restSpeedThreshold:1.7,restDisplacementThreshold:0.4,velocity:velocityX,bounciness:0,toValue:toValue,useNativeDriver:_this.props.useNativeAnimations},_this.props.animationOptions)).start(function(_ref2){var finished=_ref2.finished;if(finished){if(toValue>0&&_this.props.onSwipeableLeftOpen){_this.props.onSwipeableLeftOpen();}else if(toValue<0&&_this.props.onSwipeableRightOpen){_this.props.onSwipeableRightOpen();}if(toValue===0){var _this$props$onSwipeab,_this$props;(_this$props$onSwipeab=(_this$props=_this.props).onSwipeableClose)===null||_this$props$onSwipeab===void 0?void 0:_this$props$onSwipeab.call(_this$props);}else{var _this$props$onSwipeab2,_this$props2;(_this$props$onSwipeab2=(_this$props2=_this.props).onSwipeableOpen)===null||_this$props$onSwipeab2===void 0?void 0:_this$props$onSwipeab2.call(_this$props2);}}});if(toValue>0&&_this.props.onSwipeableLeftWillOpen){_this.props.onSwipeableLeftWillOpen();}else if(toValue<0&&_this.props.onSwipeableRightWillOpen){_this.props.onSwipeableRightWillOpen();}if(toValue===0){var _this$props$onSwipeab3,_this$props3;(_this$props$onSwipeab3=(_this$props3=_this.props).onSwipeableWillClose)===null||_this$props$onSwipeab3===void 0?void 0:_this$props$onSwipeab3.call(_this$props3);}else{var _this$props$onSwipeab4,_this$props4;(_this$props$onSwipeab4=(_this$props4=_this.props).onSwipeableWillOpen)===null||_this$props$onSwipeab4===void 0?void 0:_this$props$onSwipeab4.call(_this$props4);}});_defineProperty(_assertThisInitialized(_this),\"onRowLayout\",function(_ref3){var nativeEvent=_ref3.nativeEvent;_this.setState({rowWidth:nativeEvent.layout.width});});_defineProperty(_assertThisInitialized(_this),\"currentOffset\",function(){var _this$state3=_this.state,_this$state3$leftWidt=_this$state3.leftWidth,leftWidth=_this$state3$leftWidt===void 0?0:_this$state3$leftWidt,_this$state3$rowWidth=_this$state3.rowWidth,rowWidth=_this$state3$rowWidth===void 0?0:_this$state3$rowWidth,rowState=_this$state3.rowState;var _this$state$rightOffs2=_this.state.rightOffset,rightOffset=_this$state$rightOffs2===void 0?rowWidth:_this$state$rightOffs2;var rightWidth=rowWidth-rightOffset;if(rowState===1){return leftWidth;}else if(rowState===-1){return-rightWidth;}return 0;});_defineProperty(_assertThisInitialized(_this),\"close\",function(){_this.animateRow(_this.currentOffset(),0);});_defineProperty(_assertThisInitialized(_this),\"openLeft\",function(){var _this$state$leftWidth2=_this.state.leftWidth,leftWidth=_this$state$leftWidth2===void 0?0:_this$state$leftWidth2;_this.animateRow(_this.currentOffset(),leftWidth);});_defineProperty(_assertThisInitialized(_this),\"openRight\",function(){var _this$state$rowWidth2=_this.state.rowWidth,rowWidth=_this$state$rowWidth2===void 0?0:_this$state$rowWidth2;var _this$state$rightOffs3=_this.state.rightOffset,rightOffset=_this$state$rightOffs3===void 0?rowWidth:_this$state$rightOffs3;var rightWidth=rowWidth-rightOffset;_this.animateRow(_this.currentOffset(),-rightWidth);});var _dragX=new Animated.Value(0);_this.state={dragX:_dragX,rowTranslation:new Animated.Value(0),rowState:0,leftWidth:undefined,rightOffset:undefined,rowWidth:undefined};_this.updateAnimatedEvent(_props,_this.state);_this.onGestureEvent=Animated.event([{nativeEvent:{translationX:_dragX}}],{useNativeDriver:_props.useNativeAnimations});return _this;}_createClass(Swipeable,[{key:\"UNSAFE_componentWillUpdate\",value:function UNSAFE_componentWillUpdate(props,state){if(this.props.friction!==props.friction||this.props.overshootLeft!==props.overshootLeft||this.props.overshootRight!==props.overshootRight||this.props.overshootFriction!==props.overshootFriction||this.state.leftWidth!==state.leftWidth||this.state.rightOffset!==state.rightOffset||this.state.rowWidth!==state.rowWidth){this.updateAnimatedEvent(props,state);}}},{key:\"render\",value:function render(){var _this2=this;var rowState=this.state.rowState;var _this$props6=this.props,children=_this$props6.children,renderLeftActions=_this$props6.renderLeftActions,renderRightActions=_this$props6.renderRightActions;var left=renderLeftActions&&React.createElement(Animated.View,{style:[styles.leftActions,{transform:[{translateX:this.leftActionTranslate}]}]},renderLeftActions(this.showLeftAction,this.transX),React.createElement(View,{onLayout:function onLayout(_ref4){var nativeEvent=_ref4.nativeEvent;return _this2.setState({leftWidth:nativeEvent.layout.x});}}));var right=renderRightActions&&React.createElement(Animated.View,{style:[styles.rightActions,{transform:[{translateX:this.rightActionTranslate}]}]},renderRightActions(this.showRightAction,this.transX),React.createElement(View,{onLayout:function onLayout(_ref5){var nativeEvent=_ref5.nativeEvent;return _this2.setState({rightOffset:nativeEvent.layout.x});}}));return React.createElement(PanGestureHandler,_extends({activeOffsetX:[-10,10]},this.props,{onGestureEvent:this.onGestureEvent,onHandlerStateChange:this.onHandlerStateChange}),React.createElement(Animated.View,{onLayout:this.onRowLayout,style:[styles.container,this.props.containerStyle]},left,right,React.createElement(TapGestureHandler,{enabled:rowState!==0,onHandlerStateChange:this.onTapHandlerStateChange},React.createElement(Animated.View,{pointerEvents:rowState===0?'auto':'box-only',style:[{transform:[{translateX:this.transX}]},this.props.childrenContainerStyle]},children))));}}]);return Swipeable;}(Component);export{Swipeable as default};_defineProperty(Swipeable,\"defaultProps\",{friction:1,overshootFriction:1,useNativeAnimations:true});var styles=StyleSheet.create({container:{overflow:'hidden'},leftActions:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{flexDirection:I18nManager.isRTL?'row-reverse':'row'}),rightActions:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{flexDirection:I18nManager.isRTL?'row':'row-reverse'})});","map":{"version":3,"sources":["Swipeable.tsx"],"names":["DRAG_TOSS","Swipeable","friction","overshootFriction","useNativeAnimations","constructor","dragX","Animated","rowTranslation","rowState","leftWidth","rightOffset","rowWidth","undefined","nativeEvent","translationX","useNativeDriver","props","UNSAFE_componentWillUpdate","state","rightWidth","Math","overshootLeft","overshootRight","transX","inputRange","outputRange","Number","extrapolate","State","ev","leftThreshold","rightThreshold","startOffsetX","toValue","velocityX","restSpeedThreshold","restDisplacementThreshold","velocity","bounciness","animationOptions","finished","width","render","renderRightActions","left","renderLeftActions","styles","transform","translateX","leftActionTranslate","x","right","rightActionTranslate","onHandlerStateChange","onTapHandlerStateChange","container","overflow","leftActions","StyleSheet","flexDirection","I18nManager","rightActions"],"mappings":"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","sourcesContent":["// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us to\n// move faster and fix possible issues quicker\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  I18nManager,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../handlers/gestureHandlerCommon';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n  PanGestureHandlerProps,\n} from '../handlers/PanGestureHandler';\nimport {\n  TapGestureHandler,\n  TapGestureHandlerEventPayload,\n} from '../handlers/TapGestureHandler';\nimport { State } from '../State';\n\nconst DRAG_TOSS = 0.05;\n\ntype SwipeableExcludes = Exclude<\n  keyof PanGestureHandlerProps,\n  'onGestureEvent' | 'onHandlerStateChange'\n>;\n\nexport interface SwipeableProps\n  extends Pick<PanGestureHandlerProps, SwipeableExcludes> {\n  /**\n   * Enables two-finger gestures on supported devices, for example iPads with\n   * trackpads. If not enabled the gesture will require click + drag, with\n   * `enableTrackpadTwoFingerGesture` swiping with two fingers will also trigger\n   * the gesture.\n   */\n  enableTrackpadTwoFingerGesture?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance. e.g. value of 1 will indicate that the swipeable panel\n   * should exactly follow the gesture, 2 means it is going to be two times\n   * \"slower\".\n   */\n  friction?: number;\n\n  /**\n   * Distance from the left edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  leftThreshold?: number;\n\n  /**\n   * Distance from the right edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  rightThreshold?: number;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the left\n   * actions panel's width. It is set to true by default as long as the left\n   * panel render method is present.\n   */\n  overshootLeft?: boolean;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the\n   * right actions panel's width. It is set to true by default as long as the\n   * right panel render method is present.\n   */\n  overshootRight?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance at overshoot. Default value is 1, it mean no friction, for\n   * a native feel, try 8 or above.\n   */\n  overshootFriction?: number;\n\n  /**\n   * Called when left action panel gets open.\n   */\n  onSwipeableLeftOpen?: () => void;\n\n  /**\n   * Called when right action panel gets open.\n   */\n  onSwipeableRightOpen?: () => void;\n\n  /**\n   * Called when action panel gets open (either right or left).\n   */\n  onSwipeableOpen?: () => void;\n\n  /**\n   * Called when action panel is closed.\n   */\n  onSwipeableClose?: () => void;\n\n  /**\n   * Called when left action panel starts animating on open.\n   */\n  onSwipeableLeftWillOpen?: () => void;\n\n  /**\n   * Called when right action panel starts animating on open.\n   */\n  onSwipeableRightWillOpen?: () => void;\n\n  /**\n   * Called when action panel starts animating on open (either right or left).\n   */\n  onSwipeableWillOpen?: () => void;\n\n  /**\n   * Called when action panel starts animating on close.\n   */\n  onSwipeableWillClose?: () => void;\n\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1] dragAnimatedValue: [0, +]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderLeftActions?: (\n    progressAnimatedValue: Animated.AnimatedInterpolation,\n    dragAnimatedValue: Animated.AnimatedInterpolation\n  ) => React.ReactNode;\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1] dragAnimatedValue: [0, -]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderRightActions?: (\n    progressAnimatedValue: Animated.AnimatedInterpolation,\n    dragAnimatedValue: Animated.AnimatedInterpolation\n  ) => React.ReactNode;\n\n  useNativeAnimations?: boolean;\n\n  animationOptions?: Record<string, unknown>;\n\n  /**\n   * Style object for the container (`Animated.View`), for example to override\n   * `overflow: 'hidden'`.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * Style object for the children container (`Animated.View`), for example to\n   * apply `flex: 1`\n   */\n  childrenContainerStyle?: StyleProp<ViewStyle>;\n}\n\ntype SwipeableState = {\n  dragX: Animated.Value;\n  rowTranslation: Animated.Value;\n  rowState: number;\n  leftWidth?: number;\n  rightOffset?: number;\n  rowWidth?: number;\n};\n\nexport default class Swipeable extends Component<\n  SwipeableProps,\n  SwipeableState\n> {\n  static defaultProps = {\n    friction: 1,\n    overshootFriction: 1,\n    useNativeAnimations: true,\n  };\n\n  constructor(props: SwipeableProps) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this.updateAnimatedEvent(props, this.state);\n\n    this.onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations! }\n    );\n  }\n\n  UNSAFE_componentWillUpdate(props: SwipeableProps, state: SwipeableState) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.props.overshootFriction !== props.overshootFriction ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this.updateAnimatedEvent(props, state);\n    }\n  }\n\n  private onGestureEvent?: (\n    event: GestureEvent<PanGestureHandlerEventPayload>\n  ) => void;\n  private transX?: Animated.AnimatedInterpolation;\n  private showLeftAction?: Animated.AnimatedInterpolation | Animated.Value;\n  private leftActionTranslate?: Animated.AnimatedInterpolation;\n  private showRightAction?: Animated.AnimatedInterpolation | Animated.Value;\n  private rightActionTranslate?: Animated.AnimatedInterpolation;\n\n  private updateAnimatedEvent = (\n    props: SwipeableProps,\n    state: SwipeableState\n  ) => {\n    const { friction, overshootFriction } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const {\n      overshootLeft = leftWidth > 0,\n      overshootRight = rightWidth > 0,\n    } = props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction!],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [-rightWidth - 1, -rightWidth, leftWidth, leftWidth + 1],\n      outputRange: [\n        -rightWidth - (overshootRight ? 1 / overshootFriction! : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 / overshootFriction! : 0),\n      ],\n    });\n    this.transX = transX;\n    this.showLeftAction =\n      leftWidth > 0\n        ? transX.interpolate({\n            inputRange: [-1, 0, leftWidth],\n            outputRange: [0, 0, 1],\n          })\n        : new Animated.Value(0);\n    this.leftActionTranslate = this.showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this.showRightAction =\n      rightWidth > 0\n        ? transX.interpolate({\n            inputRange: [-rightWidth, 0, 1],\n            outputRange: [1, 0, 0],\n          })\n        : new Animated.Value(0);\n    this.rightActionTranslate = this.showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  private onTapHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<TapGestureHandlerEventPayload>) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  private onHandlerStateChange = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    if (ev.nativeEvent.oldState === State.ACTIVE) {\n      this.handleRelease(ev);\n    }\n  };\n\n  private handleRelease = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    const { velocityX, translationX: dragX } = ev.nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this.currentOffset() + dragX / friction!;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction!;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this.animateRow(startOffsetX, toValue, velocityX / friction!);\n  };\n\n  private animateRow = (\n    fromValue: number,\n    toValue: number,\n    velocityX?:\n      | number\n      | {\n          x: number;\n          y: number;\n        }\n  ) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations!,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0 && this.props.onSwipeableLeftOpen) {\n          this.props.onSwipeableLeftOpen();\n        } else if (toValue < 0 && this.props.onSwipeableRightOpen) {\n          this.props.onSwipeableRightOpen();\n        }\n\n        if (toValue === 0) {\n          this.props.onSwipeableClose?.();\n        } else {\n          this.props.onSwipeableOpen?.();\n        }\n      }\n    });\n    if (toValue > 0 && this.props.onSwipeableLeftWillOpen) {\n      this.props.onSwipeableLeftWillOpen();\n    } else if (toValue < 0 && this.props.onSwipeableRightWillOpen) {\n      this.props.onSwipeableRightWillOpen();\n    }\n\n    if (toValue === 0) {\n      this.props.onSwipeableWillClose?.();\n    } else {\n      this.props.onSwipeableWillOpen?.();\n    }\n  };\n\n  private onRowLayout = ({ nativeEvent }: LayoutChangeEvent) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  private currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this.animateRow(this.currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this.animateRow(this.currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this.animateRow(this.currentOffset(), -rightWidth);\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const { children, renderLeftActions, renderRightActions } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          // all those and below parameters can have ! since they are all\n          // asigned in constructor in `updateAnimatedEvent` but TS cannot spot\n          // it for some reason\n          { transform: [{ translateX: this.leftActionTranslate! }] },\n        ]}>\n        {renderLeftActions(this.showLeftAction!, this.transX!)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this.rightActionTranslate! }] },\n        ]}>\n        {renderRightActions(this.showRightAction!, this.transX!)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        activeOffsetX={[-10, 10]}\n        {...this.props}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}>\n        <Animated.View\n          onLayout={this.onRowLayout}\n          style={[styles.container, this.props.containerStyle]}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            onHandlerStateChange={this.onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={[\n                {\n                  transform: [{ translateX: this.transX! }],\n                },\n                this.props.childrenContainerStyle,\n              ]}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}