{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{ContinousBaseGesture}from\"./gesture\";var changeEventCalculator=function(){var _f=function _f(current,_previous){return current;};_f._closure={};_f.asString=\"function changeEventCalculator(current,_previous){return current;}\";_f.__workletHash=15046825215399;_f.__location=\"C:\\\\Users\\\\DELL\\\\Documents\\\\ReactNative\\\\Smartendance\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\manualGesture.js (3:0)\";return _f;}();export var ManualGesture=function(_ContinousBaseGesture){_inherits(ManualGesture,_ContinousBaseGesture);var _super=_createSuper(ManualGesture);function ManualGesture(){var _this;_classCallCheck(this,ManualGesture);_this=_super.call(this);_this.handlerName='ManualGestureHandler';return _this;}_createClass(ManualGesture,[{key:\"onChange\",value:function onChange(callback){this.handlers.changeEventCalculator=changeEventCalculator;return _get(_getPrototypeOf(ManualGesture.prototype),\"onChange\",this).call(this,callback);}}]);return ManualGesture;}(ContinousBaseGesture);","map":{"version":3,"sources":["manualGesture.ts"],"names":["constructor","onChange"],"mappings":"kjCACA,OAAA,oBAAA,iB,GAEA,sB,+BAAA,O,CAAA,S,CAGE,CAEA,MAAA,QAAA,CACD,C,0TAED,UAAO,cAAP,uHAIEA,wBAAc,+CACZ,wBAEA,MAAA,WAAA,CAAA,sBAAA,CAHY,aAIb,CARH,kDAUEC,kBAAQ,QAARA,CAEE,CAEA,KAAA,QAAA,CAAA,qBAAA,CAAA,qBAAA,CACA,gFAAA,QAAA,EACD,CAhBH,2BAAO,oBAAP","sourcesContent":["import { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport { ContinousBaseGesture } from './gesture';\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<Record<string, never>>,\n  _previous?: GestureUpdateEvent<Record<string, never>>\n) {\n  'worklet';\n  return current;\n}\n\nexport class ManualGesture extends ContinousBaseGesture<\n  Record<string, never>,\n  Record<string, never>\n> {\n  constructor() {\n    super();\n\n    this.handlerName = 'ManualGestureHandler';\n  }\n\n  onChange(\n    callback: (event: GestureUpdateEvent<Record<string, never>>) => void\n  ) {\n    // @ts-ignore TS being overprotective, Record<string, never> is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ManualGestureType = InstanceType<typeof ManualGesture>;\n"]},"metadata":{},"sourceType":"module"}