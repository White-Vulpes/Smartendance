{"ast":null,"code":"import*as React from'react';import NavigationBuilderContext from\"./NavigationBuilderContext\";import NavigationStateContext from\"./NavigationStateContext\";export default function useOptionsGetters(_ref){var key=_ref.key,options=_ref.options,navigation=_ref.navigation;var optionsRef=React.useRef(options);var optionsGettersFromChildRef=React.useRef({});var _React$useContext=React.useContext(NavigationBuilderContext),onOptionsChange=_React$useContext.onOptionsChange;var _React$useContext2=React.useContext(NavigationStateContext),parentAddOptionsGetter=_React$useContext2.addOptionsGetter;var optionsChangeListener=React.useCallback(function(){var _navigation$isFocused;var isFocused=(_navigation$isFocused=navigation===null||navigation===void 0?void 0:navigation.isFocused())!==null&&_navigation$isFocused!==void 0?_navigation$isFocused:true;var hasChildren=Object.keys(optionsGettersFromChildRef.current).length;if(isFocused&&!hasChildren){var _optionsRef$current;onOptionsChange((_optionsRef$current=optionsRef.current)!==null&&_optionsRef$current!==void 0?_optionsRef$current:{});}},[navigation,onOptionsChange]);React.useEffect(function(){optionsRef.current=options;optionsChangeListener();return navigation===null||navigation===void 0?void 0:navigation.addListener('focus',optionsChangeListener);},[navigation,options,optionsChangeListener]);var getOptionsFromListener=React.useCallback(function(){for(var _key in optionsGettersFromChildRef.current){if(optionsGettersFromChildRef.current.hasOwnProperty(_key)){var _optionsGettersFromCh,_optionsGettersFromCh2;var result=(_optionsGettersFromCh=(_optionsGettersFromCh2=optionsGettersFromChildRef.current)[_key])===null||_optionsGettersFromCh===void 0?void 0:_optionsGettersFromCh.call(_optionsGettersFromCh2);if(result!==null){return result;}}}return null;},[]);var getCurrentOptions=React.useCallback(function(){var _navigation$isFocused2;var isFocused=(_navigation$isFocused2=navigation===null||navigation===void 0?void 0:navigation.isFocused())!==null&&_navigation$isFocused2!==void 0?_navigation$isFocused2:true;if(!isFocused){return null;}var optionsFromListener=getOptionsFromListener();if(optionsFromListener!==null){return optionsFromListener;}return optionsRef.current;},[navigation,getOptionsFromListener]);React.useEffect(function(){return parentAddOptionsGetter===null||parentAddOptionsGetter===void 0?void 0:parentAddOptionsGetter(key,getCurrentOptions);},[getCurrentOptions,parentAddOptionsGetter,key]);var addOptionsGetter=React.useCallback(function(key,getter){optionsGettersFromChildRef.current[key]=getter;optionsChangeListener();return function(){delete optionsGettersFromChildRef.current[key];optionsChangeListener();};},[optionsChangeListener]);return{addOptionsGetter:addOptionsGetter,getCurrentOptions:getCurrentOptions};}","map":{"version":3,"sources":["useOptionsGetters.tsx"],"names":["navigation","optionsRef","React","optionsGettersFromChildRef","onOptionsChange","addOptionsGetter","parentAddOptionsGetter","optionsChangeListener","isFocused","hasChildren","Object","getOptionsFromListener","result","getCurrentOptions","optionsFromListener"],"mappings":"AACA,MAAO,GAAP,MAAA,KAAA,OAAA,CAEA,MAAA,yBAAA,kCACA,MAAA,uBAAA,gCASA,cAAe,SAAA,kBAAA,CAAA,IAAA,CAIH,CAJ8B,GAAA,IAAA,CAI9B,IAJ8B,CAAA,GAAA,CAAA,OAAA,CAI9B,IAJ8B,CAAA,OAAA,CAGxCA,UAHwC,CAI9B,IAJ8B,CAGxCA,UAHwC,CAKxC,GAAMC,WAAU,CAAGC,KAAK,CAALA,MAAAA,CAAnB,OAAmBA,CAAnB,CACA,GAAMC,2BAA0B,CAAGD,KAAK,CAALA,MAAAA,CAAnC,EAAmCA,CAAnC,CAIA,sBAA4BA,KAAK,CAALA,UAAAA,CAA5B,wBAA4BA,CAA5B,CAAQE,eAAR,mBAAQA,eAAR,CACA,uBAAqDF,KAAK,CAALA,UAAAA,CAArD,sBAAqDA,CAArD,CAA0BI,sBAA1B,oBAAQD,gBAAR,CAIA,GAAME,sBAAqB,CAAG,KAAK,CAAL,WAAA,CAAkB,UAAM,CAAA,GAAA,sBAAA,CACpD,GAAMC,UAAS,CAAA,CAAA,qBAAA,CAAGR,UAAH,GAAA,IAAGA,EAAAA,UAAH,GAAA,IAAA,EAAGA,CAAH,IAAA,EAAGA,CAAAA,UAAU,CAAb,SAAGA,EAAH,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,qBAAA,CAAf,IAAA,CACA,GAAMS,YAAW,CAAGC,MAAM,CAANA,IAAAA,CAAYP,0BAA0B,CAAtCO,OAAAA,EAApB,MAAA,CAEA,GAAIF,SAAS,EAAI,CAAjB,WAAA,CAA+B,CAAA,GAAA,oBAAA,CAC7BJ,eAAe,CAAA,CAAA,mBAAA,CAACH,UAAU,CAAX,OAAA,IAAA,IAAA,EAAA,mBAAA,GAAA,IAAA,EAAA,CAAA,mBAAA,CAAfG,EAAe,CAAfA,CACD,CAN2B,CAAA,CAO3B,CAAA,UAAA,CAPH,eAOG,CAP2B,CAA9B,CASAF,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpBD,UAAU,CAAVA,OAAAA,CAAAA,OAAAA,CACAM,qBAAqB,GAErB,MAAOP,WAAP,GAAA,IAAOA,EAAAA,UAAP,GAAA,IAAA,EAAOA,CAAP,IAAA,EAAOA,CAAAA,UAAU,CAAVA,WAAAA,CAAAA,OAAAA,CAAP,qBAAOA,CAAP,CAJFE,CAAAA,CAKG,CAAA,UAAA,CAAA,OAAA,CALHA,qBAKG,CALHA,EAOA,GAAMS,uBAAsB,CAAG,KAAK,CAAL,WAAA,CAAkB,UAAM,CACrD,IAAK,GAAL,KAAA,GAAgBR,2BAA0B,CAA1C,OAAA,CAAoD,CAClD,GAAIA,0BAA0B,CAA1BA,OAAAA,CAAAA,cAAAA,CAAJ,IAAIA,CAAJ,CAA4D,CAAA,GAAA,sBAAA,CAAA,sBAAA,CAC1D,GAAMS,OAAM,CAAA,CAAA,qBAAA,CAAG,CAAA,sBAAA,CAAA,0BAA0B,CAA1B,OAAA,EAAH,IAAG,CAAH,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAG,qBAAA,CAAA,IAAA,CAD2C,sBAC3C,CAAf,CAGA,GAAIA,MAAM,GAAV,IAAA,CAAqB,CACnB,MAAA,OAAA,CACD,CACF,CACF,CAED,MAAA,KAAA,CAZ6B,CAAA,CAA/B,EAA+B,CAA/B,CAeA,GAAMC,kBAAiB,CAAG,KAAK,CAAL,WAAA,CAAkB,UAAM,CAAA,GAAA,uBAAA,CAChD,GAAML,UAAS,CAAA,CAAA,sBAAA,CAAGR,UAAH,GAAA,IAAGA,EAAAA,UAAH,GAAA,IAAA,EAAGA,CAAH,IAAA,EAAGA,CAAAA,UAAU,CAAb,SAAGA,EAAH,IAAA,IAAA,EAAA,sBAAA,GAAA,IAAA,EAAA,CAAA,sBAAA,CAAf,IAAA,CAEA,GAAI,CAAJ,SAAA,CAAgB,CACd,MAAA,KAAA,CACD,CAED,GAAMc,oBAAmB,CAAGH,sBAA5B,EAAA,CAEA,GAAIG,mBAAmB,GAAvB,IAAA,CAAkC,CAChC,MAAA,oBAAA,CACD,CAED,MAAOb,WAAU,CAAjB,OAAA,CAbwB,CAAA,CAcvB,CAAA,UAAA,CAdH,sBAcG,CAduB,CAA1B,CAgBAC,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpB,MAAOI,uBAAP,GAAA,IAAOA,EAAAA,sBAAP,GAAA,IAAA,EAAOA,CAAP,IAAA,EAAOA,CAAAA,sBAAsB,CAAA,GAAA,CAA7B,iBAA6B,CAA7B,CADFJ,CAAAA,CAEG,CAAA,iBAAA,CAAA,sBAAA,CAFHA,GAEG,CAFHA,EAIA,GAAMG,iBAAgB,CAAG,KAAK,CAAL,WAAA,CACvB,SAAA,GAAA,CAAA,MAAA,CAA0D,CACxDF,0BAA0B,CAA1BA,OAAAA,CAAAA,GAAAA,EAAAA,MAAAA,CACAI,qBAAqB,GAErB,MAAO,WAAM,CAEX,MAAOJ,2BAA0B,CAA1BA,OAAAA,CAAP,GAAOA,CAAP,CACAI,qBAAqB,GAHvB,CAAA,CALqB,CAAA,CAWvB,CAXF,qBAWE,CAXuB,CAAzB,CAcA,MAAO,CACLF,gBADK,CACLA,gBADK,CAELQ,iBAAAA,CAAAA,iBAFK,CAAP,CAID","sourcesContent":["import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport type { NavigationProp } from './types';\n\ntype Options = {\n  key?: string;\n  navigation?: NavigationProp<ParamListBase>;\n  options?: object | undefined;\n};\n\nexport default function useOptionsGetters({\n  key,\n  options,\n  navigation,\n}: Options) {\n  const optionsRef = React.useRef<object | undefined>(options);\n  const optionsGettersFromChildRef = React.useRef<\n    Record<string, () => object | undefined | null>\n  >({});\n\n  const { onOptionsChange } = React.useContext(NavigationBuilderContext);\n  const { addOptionsGetter: parentAddOptionsGetter } = React.useContext(\n    NavigationStateContext\n  );\n\n  const optionsChangeListener = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n    const hasChildren = Object.keys(optionsGettersFromChildRef.current).length;\n\n    if (isFocused && !hasChildren) {\n      onOptionsChange(optionsRef.current ?? {});\n    }\n  }, [navigation, onOptionsChange]);\n\n  React.useEffect(() => {\n    optionsRef.current = options;\n    optionsChangeListener();\n\n    return navigation?.addListener('focus', optionsChangeListener);\n  }, [navigation, options, optionsChangeListener]);\n\n  const getOptionsFromListener = React.useCallback(() => {\n    for (let key in optionsGettersFromChildRef.current) {\n      if (optionsGettersFromChildRef.current.hasOwnProperty(key)) {\n        const result = optionsGettersFromChildRef.current[key]?.();\n\n        // null means unfocused route\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }, []);\n\n  const getCurrentOptions = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n\n    if (!isFocused) {\n      return null;\n    }\n\n    const optionsFromListener = getOptionsFromListener();\n\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n\n    return optionsRef.current;\n  }, [navigation, getOptionsFromListener]);\n\n  React.useEffect(() => {\n    return parentAddOptionsGetter?.(key!, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n\n  const addOptionsGetter = React.useCallback(\n    (key: string, getter: () => object | undefined | null) => {\n      optionsGettersFromChildRef.current[key] = getter;\n      optionsChangeListener();\n\n      return () => {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete optionsGettersFromChildRef.current[key];\n        optionsChangeListener();\n      };\n    },\n    [optionsChangeListener]\n  );\n\n  return {\n    addOptionsGetter,\n    getCurrentOptions,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}