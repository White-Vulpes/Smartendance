{"ast":null,"code":"var Reanimated;try{Reanimated=require('react-native-reanimated');if(!Reanimated.setGestureState){Reanimated.setGestureState=function(){var _f=function _f(){console.warn('Please use newer version of react-native-reanimated in order to control state of the gestures.');};_f._closure={};_f.asString=\"function _f(){console.warn('Please use newer version of react-native-reanimated in order to control state of the gestures.');}\";_f.__workletHash=15383122326439;_f.__location=\"C:\\\\Users\\\\DELL\\\\Documents\\\\ReactNative\\\\Smartendance\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\reanimatedWrapper.js (7:33)\";return _f;}();}}catch(e){}export{Reanimated};","map":{"version":3,"sources":["reanimatedWrapper.ts"],"names":["Reanimated","require","console"],"mappings":"AAUA,GAAA,WAAA,CAkBA,GAAI,CACFA,UAAU,CAAGC,OAAO,CAApBD,yBAAoB,CAApBA,CAEA,GAAI,CAACA,UAAU,CAAf,eAAA,CAAiC,CAC/BA,UAAU,CAAVA,eAAAA,gCAAmC,CAEjCE,OAAO,CAAPA,IAAAA,CAAAA,gGAAAA,EAFFF,CAAAA,2XAJA,CAAJ,CAcE,MAAA,CAAA,CAAU,CAAE,CAEd,OAAA,UAAA","sourcesContent":["import { ComponentClass } from 'react';\nimport {\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../gestureHandlerCommon';\n\nexport interface SharedValue<T> {\n  value: T;\n}\n\nlet Reanimated: {\n  default: {\n    // Slightly modified definition copied from 'react-native-reanimated'\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    createAnimatedComponent<P extends object>(\n      component: ComponentClass<P>,\n      options?: unknown\n    ): ComponentClass<P>;\n  };\n  useEvent: (\n    callback: (event: GestureUpdateEvent | GestureStateChangeEvent) => void,\n    events: string[],\n    rebuild: boolean\n  ) => unknown;\n  useSharedValue: <T>(value: T) => SharedValue<T>;\n  setGestureState: (handlerTag: number, newState: number) => void;\n};\n\ntry {\n  Reanimated = require('react-native-reanimated');\n\n  if (!Reanimated.setGestureState) {\n    Reanimated.setGestureState = () => {\n      'worklet';\n      console.warn(\n        'Please use newer version of react-native-reanimated in order to control state of the gestures.'\n      );\n    };\n  }\n  // When 'react-native-reanimated' is not available we want to\n  // quietly continue\n  // eslint-disable-next-line no-empty\n} catch (e) {}\n\nexport { Reanimated };\n"]},"metadata":{},"sourceType":"module"}