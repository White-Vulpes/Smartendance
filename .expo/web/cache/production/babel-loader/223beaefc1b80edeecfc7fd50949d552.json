{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"numberOfPointers\",\"direction\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import Hammer from'@egjs/hammerjs';import{Direction}from\"./constants\";import{GesturePropError}from\"./Errors\";import DraggingGestureHandler from\"./DraggingGestureHandler\";import{isnan}from\"./utils\";var FlingGestureHandler=function(_DraggingGestureHandl){_inherits(FlingGestureHandler,_DraggingGestureHandl);var _super=_createSuper(FlingGestureHandler);function FlingGestureHandler(){_classCallCheck(this,FlingGestureHandler);return _super.apply(this,arguments);}_createClass(FlingGestureHandler,[{key:\"name\",get:function get(){return'swipe';}},{key:\"NativeGestureClass\",get:function get(){return Hammer.Swipe;}},{key:\"onGestureActivated\",value:function onGestureActivated(event){this.sendEvent(_objectSpread(_objectSpread({},event),{},{eventType:Hammer.INPUT_MOVE,isFinal:false,isFirst:true}));this.isGestureRunning=false;this.hasGestureFailed=false;this.sendEvent(_objectSpread(_objectSpread({},event),{},{eventType:Hammer.INPUT_END,isFinal:true}));}},{key:\"onRawEvent\",value:function onRawEvent(ev){var _this=this;_get(_getPrototypeOf(FlingGestureHandler.prototype),\"onRawEvent\",this).call(this,ev);if(this.hasGestureFailed){return;}if(ev.isFinal){setTimeout(function(){if(_this.isGestureRunning){_this.cancelEvent(ev);}});}else if(!this.hasGestureFailed&&!this.isGestureRunning){var gesture=this.hammer.get(this.name);if(gesture.options.enable(gesture,ev)){this.onStart(ev);this.sendEvent(ev);}}}},{key:\"getHammerConfig\",value:function getHammerConfig(){return{pointers:this.config.numberOfPointers,direction:this.getDirection()};}},{key:\"getTargetDirections\",value:function getTargetDirections(direction){var directions=[];if(direction&Direction.RIGHT){directions.push(Hammer.DIRECTION_RIGHT);}if(direction&Direction.LEFT){directions.push(Hammer.DIRECTION_LEFT);}if(direction&Direction.UP){directions.push(Hammer.DIRECTION_UP);}if(direction&Direction.DOWN){directions.push(Hammer.DIRECTION_DOWN);}return directions;}},{key:\"getDirection\",value:function getDirection(){var _this$getConfig=this.getConfig(),direction=_this$getConfig.direction;var directions=[];if(direction&Direction.RIGHT){directions.push(Hammer.DIRECTION_HORIZONTAL);}if(direction&Direction.LEFT){directions.push(Hammer.DIRECTION_HORIZONTAL);}if(direction&Direction.UP){directions.push(Hammer.DIRECTION_VERTICAL);}if(direction&Direction.DOWN){directions.push(Hammer.DIRECTION_VERTICAL);}directions=_toConsumableArray(new Set(directions));if(directions.length===0)return Hammer.DIRECTION_NONE;if(directions.length===1)return directions[0];return Hammer.DIRECTION_ALL;}},{key:\"isGestureEnabledForEvent\",value:function isGestureEnabledForEvent(_ref,_recognizer,_ref2){var numberOfPointers=_ref.numberOfPointers;var pointerLength=_ref2.maxPointers;var validPointerCount=pointerLength===numberOfPointers;if(!validPointerCount&&this.isGestureRunning){return{failed:true};}return{success:validPointerCount};}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref3){var _ref3$numberOfPointer=_ref3.numberOfPointers,numberOfPointers=_ref3$numberOfPointer===void 0?1:_ref3$numberOfPointer,direction=_ref3.direction,props=_objectWithoutProperties(_ref3,_excluded);if(isnan(direction)||typeof direction!=='number'){throw new GesturePropError('direction',direction,'number');}return _get(_getPrototypeOf(FlingGestureHandler.prototype),\"updateGestureConfig\",this).call(this,_objectSpread({numberOfPointers:numberOfPointers,direction:direction},props));}}]);return FlingGestureHandler;}(DraggingGestureHandler);export default FlingGestureHandler;","map":{"version":3,"sources":["FlingGestureHandler.ts"],"names":["name","NativeGestureClass","Hammer","onGestureActivated","eventType","isFinal","isFirst","onRawEvent","ev","setTimeout","gesture","getHammerConfig","pointers","direction","getTargetDirections","directions","Direction","getDirection","isGestureEnabledForEvent","numberOfPointers","maxPointers","pointerLength","validPointerCount","failed","success","updateGestureConfig","props","isnan"],"mappings":"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","sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport Hammer from '@egjs/hammerjs';\n\nimport { Direction } from './constants';\nimport { GesturePropError } from './Errors';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isnan } from './utils';\nimport { HammerInputExt } from './GestureHandler';\n\nclass FlingGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'swipe';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Swipe;\n  }\n\n  onGestureActivated(event: HammerInputExt) {\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_MOVE,\n      isFinal: false,\n      isFirst: true,\n    });\n    this.isGestureRunning = false;\n    this.hasGestureFailed = false;\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_END,\n      isFinal: true,\n    });\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      setTimeout(() => {\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer!.get(this.name);\n      // @ts-ignore FIXME(TS)\n      if (gesture.options.enable(gesture, ev)) {\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      // @ts-ignore FIXME(TS)\n      pointers: this.config.numberOfPointers,\n      direction: this.getDirection(),\n    };\n  }\n\n  getTargetDirections(direction: number) {\n    const directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_RIGHT);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_LEFT);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_UP);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_DOWN);\n    }\n    // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n    return directions;\n  }\n\n  getDirection() {\n    // @ts-ignore FIXME(TS)\n    const { direction } = this.getConfig();\n\n    let directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    directions = [...new Set(directions)];\n\n    if (directions.length === 0) return Hammer.DIRECTION_NONE;\n    if (directions.length === 1) return directions[0];\n    return Hammer.DIRECTION_ALL;\n  }\n\n  isGestureEnabledForEvent(\n    { numberOfPointers }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength }: any\n  ) {\n    const validPointerCount = pointerLength === numberOfPointers;\n    if (!validPointerCount && this.isGestureRunning) {\n      return { failed: true };\n    }\n    return { success: validPointerCount };\n  }\n\n  updateGestureConfig({ numberOfPointers = 1, direction, ...props }: any) {\n    if (isnan(direction) || typeof direction !== 'number') {\n      throw new GesturePropError('direction', direction, 'number');\n    }\n    return super.updateGestureConfig({\n      numberOfPointers,\n      direction,\n      ...props,\n    });\n  }\n}\n\nexport default FlingGestureHandler;\n"]},"metadata":{},"sourceType":"module"}