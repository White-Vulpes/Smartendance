{"ast":null,"code":"import*as React from'react';import NavigationRouteContext from\"./NavigationRouteContext\";export default function useRoute(){var route=React.useContext(NavigationRouteContext);if(route===undefined){throw new Error(\"Couldn't find a route object. Is your component inside a screen in a navigator?\");}return route;}","map":{"version":3,"sources":["useRoute.tsx"],"names":["route","React"],"mappings":"AACA,MAAO,GAAP,MAAA,KAAA,OAAA,CAEA,MAAA,uBAAA,gCAQA,cAAe,SAAA,SAAA,EAA2D,CACxE,GAAMA,MAAK,CAAGC,KAAK,CAALA,UAAAA,CAAd,sBAAcA,CAAd,CAEA,GAAID,KAAK,GAAT,SAAA,CAAyB,CACvB,KAAM,IAAA,MAAA,CAAN,iFAAM,CAAN,CAGD,CAED,MAAA,MAAA,CACD","sourcesContent":["import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { RouteProp } from './types';\n\n/**\n * Hook to access the route prop of the parent screen anywhere.\n *\n * @returns Route prop of the parent screen.\n */\nexport default function useRoute<T extends RouteProp<ParamListBase>>(): T {\n  const route = React.useContext(NavigationRouteContext);\n\n  if (route === undefined) {\n    throw new Error(\n      \"Couldn't find a route object. Is your component inside a screen in a navigator?\"\n    );\n  }\n\n  return route as T;\n}\n"]},"metadata":{},"sourceType":"module"}