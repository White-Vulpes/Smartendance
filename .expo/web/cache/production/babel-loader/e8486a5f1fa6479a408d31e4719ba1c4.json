{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"navigation\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{getHeaderTitle,Header,SafeAreaProviderCompat,Screen}from'@react-navigation/elements';import{DrawerActions,useTheme}from'@react-navigation/native';import*as React from'react';import BackHandler from\"react-native-web/dist/exports/BackHandler\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import*as Reanimated from'react-native-reanimated';import{useSafeAreaFrame}from'react-native-safe-area-context';import DrawerPositionContext from\"../utils/DrawerPositionContext\";import DrawerStatusContext from\"../utils/DrawerStatusContext\";import getDrawerStatusFromState from\"../utils/getDrawerStatusFromState\";import DrawerContent from\"./DrawerContent\";import DrawerToggleButton from\"./DrawerToggleButton\";import{GestureHandlerRootView}from\"./GestureHandler\";import{MaybeScreen,MaybeScreenContainer}from\"./ScreenFallback\";var getDefaultDrawerWidth=function getDefaultDrawerWidth(_ref){var height=_ref.height,width=_ref.width;var smallerAxisSize=Math.min(height,width);var isLandscape=width>height;var isTablet=smallerAxisSize>=600;var appBarHeight=Platform.OS==='ios'?isLandscape?32:44:56;var maxWidth=isTablet?320:280;return Math.min(smallerAxisSize-appBarHeight,maxWidth);};var GestureHandlerWrapper=GestureHandlerRootView!==null&&GestureHandlerRootView!==void 0?GestureHandlerRootView:View;function DrawerViewBase(_ref2){var _Reanimated$isConfigu;var state=_ref2.state,navigation=_ref2.navigation,descriptors=_ref2.descriptors,defaultStatus=_ref2.defaultStatus,_ref2$drawerContent=_ref2.drawerContent,drawerContent=_ref2$drawerContent===void 0?function(props){return React.createElement(DrawerContent,props);}:_ref2$drawerContent,_ref2$detachInactiveS=_ref2.detachInactiveScreens,detachInactiveScreens=_ref2$detachInactiveS===void 0?Platform.OS==='web'||Platform.OS==='android'||Platform.OS==='ios':_ref2$detachInactiveS,_ref2$useLegacyImplem=_ref2.useLegacyImplementation,useLegacyImplementation=_ref2$useLegacyImplem===void 0?!((_Reanimated$isConfigu=Reanimated.isConfigured)!==null&&_Reanimated$isConfigu!==void 0&&_Reanimated$isConfigu.call(Reanimated)):_ref2$useLegacyImplem;var Drawer=useLegacyImplementation?require(\"./legacy/Drawer\").default:require(\"./modern/Drawer\").default;var focusedRouteKey=state.routes[state.index].key;var _descriptors$focusedR=descriptors[focusedRouteKey].options,_descriptors$focusedR2=_descriptors$focusedR.drawerHideStatusBarOnOpen,drawerHideStatusBarOnOpen=_descriptors$focusedR2===void 0?false:_descriptors$focusedR2,_descriptors$focusedR3=_descriptors$focusedR.drawerPosition,drawerPosition=_descriptors$focusedR3===void 0?I18nManager.isRTL?'right':'left':_descriptors$focusedR3,_descriptors$focusedR4=_descriptors$focusedR.drawerStatusBarAnimation,drawerStatusBarAnimation=_descriptors$focusedR4===void 0?'slide':_descriptors$focusedR4,drawerStyle=_descriptors$focusedR.drawerStyle,_descriptors$focusedR5=_descriptors$focusedR.drawerType,drawerType=_descriptors$focusedR5===void 0?Platform.select({ios:'slide',default:'front'}):_descriptors$focusedR5,gestureHandlerProps=_descriptors$focusedR.gestureHandlerProps,_descriptors$focusedR6=_descriptors$focusedR.keyboardDismissMode,keyboardDismissMode=_descriptors$focusedR6===void 0?'on-drag':_descriptors$focusedR6,_descriptors$focusedR7=_descriptors$focusedR.overlayColor,overlayColor=_descriptors$focusedR7===void 0?'rgba(0, 0, 0, 0.5)':_descriptors$focusedR7,_descriptors$focusedR8=_descriptors$focusedR.swipeEdgeWidth,swipeEdgeWidth=_descriptors$focusedR8===void 0?32:_descriptors$focusedR8,_descriptors$focusedR9=_descriptors$focusedR.swipeEnabled,swipeEnabled=_descriptors$focusedR9===void 0?Platform.OS!=='web'&&Platform.OS!=='windows'&&Platform.OS!=='macos':_descriptors$focusedR9,_descriptors$focusedR10=_descriptors$focusedR.swipeMinDistance,swipeMinDistance=_descriptors$focusedR10===void 0?60:_descriptors$focusedR10;var _React$useState=React.useState([focusedRouteKey]),_React$useState2=_slicedToArray(_React$useState,2),loaded=_React$useState2[0],setLoaded=_React$useState2[1];if(!loaded.includes(focusedRouteKey)){setLoaded([].concat(_toConsumableArray(loaded),[focusedRouteKey]));}var dimensions=useSafeAreaFrame();var _useTheme=useTheme(),colors=_useTheme.colors;var drawerStatus=getDrawerStatusFromState(state);var handleDrawerOpen=React.useCallback(function(){navigation.dispatch(_objectSpread(_objectSpread({},DrawerActions.openDrawer()),{},{target:state.key}));},[navigation,state.key]);var handleDrawerClose=React.useCallback(function(){navigation.dispatch(_objectSpread(_objectSpread({},DrawerActions.closeDrawer()),{},{target:state.key}));},[navigation,state.key]);React.useEffect(function(){if(drawerStatus===defaultStatus||drawerType==='permanent'){return;}var handleHardwareBack=function handleHardwareBack(){if(!navigation.isFocused()){return false;}if(defaultStatus==='open'){handleDrawerOpen();}else{handleDrawerClose();}return true;};var handleEscape=function handleEscape(e){if(e.key==='Escape'){handleHardwareBack();}};var subscription=BackHandler.addEventListener('hardwareBackPress',handleHardwareBack);if(Platform.OS==='web'){var _document,_document$body,_document$body$addEve;(_document=document)===null||_document===void 0?void 0:(_document$body=_document.body)===null||_document$body===void 0?void 0:(_document$body$addEve=_document$body.addEventListener)===null||_document$body$addEve===void 0?void 0:_document$body$addEve.call(_document$body,'keyup',handleEscape);}return function(){subscription.remove();if(Platform.OS==='web'){var _document2,_document2$body,_document2$body$remov;(_document2=document)===null||_document2===void 0?void 0:(_document2$body=_document2.body)===null||_document2$body===void 0?void 0:(_document2$body$remov=_document2$body.removeEventListener)===null||_document2$body$remov===void 0?void 0:_document2$body$remov.call(_document2$body,'keyup',handleEscape);}};},[defaultStatus,drawerStatus,drawerType,handleDrawerClose,handleDrawerOpen,navigation]);var renderDrawerContent=function renderDrawerContent(){return React.createElement(DrawerPositionContext.Provider,{value:drawerPosition},drawerContent({state:state,navigation:navigation,descriptors:descriptors}));};var renderSceneContent=function renderSceneContent(){return React.createElement(MaybeScreenContainer,{enabled:detachInactiveScreens,hasTwoStates:true,style:styles.content},state.routes.map(function(route,index){var descriptor=descriptors[route.key];var _descriptor$options=descriptor.options,_descriptor$options$l=_descriptor$options.lazy,lazy=_descriptor$options$l===void 0?true:_descriptor$options$l,unmountOnBlur=_descriptor$options.unmountOnBlur;var isFocused=state.index===index;if(unmountOnBlur&&!isFocused){return null;}if(lazy&&!loaded.includes(route.key)&&!isFocused){return null;}var _descriptor$options2=descriptor.options,_descriptor$options2$=_descriptor$options2.header,header=_descriptor$options2$===void 0?function(_ref3){var _options$headerLeft;var layout=_ref3.layout,options=_ref3.options;return React.createElement(Header,_extends({},options,{layout:layout,title:getHeaderTitle(options,route.name),headerLeft:(_options$headerLeft=options.headerLeft)!==null&&_options$headerLeft!==void 0?_options$headerLeft:function(props){return React.createElement(DrawerToggleButton,props);}}));}:_descriptor$options2$,sceneContainerStyle=_descriptor$options2.sceneContainerStyle;return React.createElement(MaybeScreen,{key:route.key,style:[StyleSheet.absoluteFill,{zIndex:isFocused?0:-1}],visible:isFocused,enabled:detachInactiveScreens},React.createElement(Screen,{focused:isFocused,route:descriptor.route,navigation:descriptor.navigation,headerShown:descriptor.options.headerShown,headerTransparent:descriptor.options.headerTransparent,headerStatusBarHeight:descriptor.options.headerStatusBarHeight,header:header({layout:dimensions,route:descriptor.route,navigation:descriptor.navigation,options:descriptor.options}),style:sceneContainerStyle},descriptor.render()));}));};return React.createElement(DrawerStatusContext.Provider,{value:drawerStatus},React.createElement(Drawer,{open:drawerStatus!=='closed',onOpen:handleDrawerOpen,onClose:handleDrawerClose,gestureHandlerProps:gestureHandlerProps,swipeEnabled:swipeEnabled,swipeEdgeWidth:swipeEdgeWidth,swipeVelocityThreshold:500,swipeDistanceThreshold:swipeMinDistance,hideStatusBarOnOpen:drawerHideStatusBarOnOpen,statusBarAnimation:drawerStatusBarAnimation,keyboardDismissMode:keyboardDismissMode,drawerType:drawerType,drawerPosition:drawerPosition,drawerStyle:[{width:getDefaultDrawerWidth(dimensions),backgroundColor:colors.card},drawerType==='permanent'&&(drawerPosition==='left'?{borderRightColor:colors.border,borderRightWidth:StyleSheet.hairlineWidth}:{borderLeftColor:colors.border,borderLeftWidth:StyleSheet.hairlineWidth}),drawerStyle],overlayStyle:{backgroundColor:overlayColor},renderDrawerContent:renderDrawerContent,renderSceneContent:renderSceneContent,dimensions:dimensions}));}export default function DrawerView(_ref4){var navigation=_ref4.navigation,rest=_objectWithoutProperties(_ref4,_excluded);return React.createElement(SafeAreaProviderCompat,null,React.createElement(GestureHandlerWrapper,{style:styles.content},React.createElement(DrawerViewBase,_extends({navigation:navigation},rest))));}var styles=StyleSheet.create({content:{flex:1}});","map":{"version":3,"sources":["DrawerView.tsx"],"names":["getDefaultDrawerWidth","width","smallerAxisSize","Math","isLandscape","isTablet","appBarHeight","Platform","maxWidth","GestureHandlerWrapper","GestureHandlerRootView","drawerContent","props","detachInactiveScreens","useLegacyImplementation","Reanimated","Drawer","require","focusedRouteKey","state","drawerHideStatusBarOnOpen","drawerPosition","I18nManager","drawerStatusBarAnimation","drawerType","ios","default","keyboardDismissMode","overlayColor","swipeEdgeWidth","swipeEnabled","swipeMinDistance","descriptors","React","loaded","setLoaded","dimensions","useSafeAreaFrame","colors","useTheme","drawerStatus","getDrawerStatusFromState","handleDrawerOpen","navigation","DrawerActions","target","key","handleDrawerClose","handleHardwareBack","defaultStatus","handleEscape","e","subscription","BackHandler","renderDrawerContent","renderSceneContent","styles","content","descriptor","route","lazy","unmountOnBlur","isFocused","header","options","getHeaderTitle","sceneContainerStyle","StyleSheet","zIndex","layout","backgroundColor","card","borderRightColor","borderRightWidth","hairlineWidth","borderLeftColor","borderLeftWidth","rest","flex"],"mappings":"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","sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport {\n  DrawerActions,\n  DrawerNavigationState,\n  DrawerStatus,\n  ParamListBase,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  BackHandler,\n  I18nManager,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport * as Reanimated from 'react-native-reanimated';\nimport { useSafeAreaFrame } from 'react-native-safe-area-context';\n\nimport type {\n  DrawerContentComponentProps,\n  DrawerDescriptorMap,\n  DrawerHeaderProps,\n  DrawerNavigationConfig,\n  DrawerNavigationHelpers,\n  DrawerNavigationProp,\n  DrawerProps,\n} from '../types';\nimport DrawerPositionContext from '../utils/DrawerPositionContext';\nimport DrawerStatusContext from '../utils/DrawerStatusContext';\nimport getDrawerStatusFromState from '../utils/getDrawerStatusFromState';\nimport DrawerContent from './DrawerContent';\nimport DrawerToggleButton from './DrawerToggleButton';\nimport { GestureHandlerRootView } from './GestureHandler';\nimport { MaybeScreen, MaybeScreenContainer } from './ScreenFallback';\n\ntype Props = DrawerNavigationConfig & {\n  defaultStatus: DrawerStatus;\n  state: DrawerNavigationState<ParamListBase>;\n  navigation: DrawerNavigationHelpers;\n  descriptors: DrawerDescriptorMap;\n};\n\nconst getDefaultDrawerWidth = ({\n  height,\n  width,\n}: {\n  height: number;\n  width: number;\n}) => {\n  /*\n   * Default drawer width is screen width - header height\n   * with a max width of 280 on mobile and 320 on tablet\n   * https://material.io/components/navigation-drawer\n   */\n  const smallerAxisSize = Math.min(height, width);\n  const isLandscape = width > height;\n  const isTablet = smallerAxisSize >= 600;\n  const appBarHeight = Platform.OS === 'ios' ? (isLandscape ? 32 : 44) : 56;\n  const maxWidth = isTablet ? 320 : 280;\n\n  return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n};\n\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\nfunction DrawerViewBase({\n  state,\n  navigation,\n  descriptors,\n  defaultStatus,\n  drawerContent = (props: DrawerContentComponentProps) => (\n    <DrawerContent {...props} />\n  ),\n  detachInactiveScreens = Platform.OS === 'web' ||\n    Platform.OS === 'android' ||\n    Platform.OS === 'ios',\n  // Reanimated 2 is not configured\n  // @ts-expect-error: the type definitions are incomplete\n  useLegacyImplementation = !Reanimated.isConfigured?.(),\n}: Props) {\n  const Drawer: React.ComponentType<DrawerProps> = useLegacyImplementation\n    ? require('./legacy/Drawer').default\n    : require('./modern/Drawer').default;\n\n  const focusedRouteKey = state.routes[state.index].key;\n  const {\n    drawerHideStatusBarOnOpen = false,\n    drawerPosition = I18nManager.isRTL ? 'right' : 'left',\n    drawerStatusBarAnimation = 'slide',\n    drawerStyle,\n    drawerType = Platform.select({ ios: 'slide', default: 'front' }),\n    gestureHandlerProps,\n    keyboardDismissMode = 'on-drag',\n    overlayColor = 'rgba(0, 0, 0, 0.5)',\n    swipeEdgeWidth = 32,\n    swipeEnabled = Platform.OS !== 'web' &&\n      Platform.OS !== 'windows' &&\n      Platform.OS !== 'macos',\n    swipeMinDistance = 60,\n  } = descriptors[focusedRouteKey].options;\n\n  const [loaded, setLoaded] = React.useState([focusedRouteKey]);\n\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([...loaded, focusedRouteKey]);\n  }\n\n  const dimensions = useSafeAreaFrame();\n\n  const { colors } = useTheme();\n\n  const drawerStatus = getDrawerStatusFromState(state);\n\n  const handleDrawerOpen = React.useCallback(() => {\n    navigation.dispatch({\n      ...DrawerActions.openDrawer(),\n      target: state.key,\n    });\n  }, [navigation, state.key]);\n\n  const handleDrawerClose = React.useCallback(() => {\n    navigation.dispatch({\n      ...DrawerActions.closeDrawer(),\n      target: state.key,\n    });\n  }, [navigation, state.key]);\n\n  React.useEffect(() => {\n    if (drawerStatus === defaultStatus || drawerType === 'permanent') {\n      return;\n    }\n\n    const handleHardwareBack = () => {\n      // We shouldn't handle the back button if the parent screen isn't focused\n      // This will avoid the drawer overriding event listeners from a focused screen\n      if (!navigation.isFocused()) {\n        return false;\n      }\n\n      if (defaultStatus === 'open') {\n        handleDrawerOpen();\n      } else {\n        handleDrawerClose();\n      }\n\n      return true;\n    };\n\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        handleHardwareBack();\n      }\n    };\n\n    // We only add the listeners when drawer opens\n    // This way we can make sure that the listener is added as late as possible\n    // This will make sure that our handler will run first when back button is pressed\n    const subscription = BackHandler.addEventListener(\n      'hardwareBackPress',\n      handleHardwareBack\n    );\n\n    if (Platform.OS === 'web') {\n      document?.body?.addEventListener?.('keyup', handleEscape);\n    }\n\n    return () => {\n      subscription.remove();\n\n      if (Platform.OS === 'web') {\n        document?.body?.removeEventListener?.('keyup', handleEscape);\n      }\n    };\n  }, [\n    defaultStatus,\n    drawerStatus,\n    drawerType,\n    handleDrawerClose,\n    handleDrawerOpen,\n    navigation,\n  ]);\n\n  const renderDrawerContent = () => {\n    return (\n      <DrawerPositionContext.Provider value={drawerPosition}>\n        {drawerContent({\n          state: state,\n          navigation: navigation,\n          descriptors: descriptors,\n        })}\n      </DrawerPositionContext.Provider>\n    );\n  };\n\n  const renderSceneContent = () => {\n    return (\n      <MaybeScreenContainer\n        enabled={detachInactiveScreens}\n        hasTwoStates\n        style={styles.content}\n      >\n        {state.routes.map((route, index) => {\n          const descriptor = descriptors[route.key];\n          const { lazy = true, unmountOnBlur } = descriptor.options;\n          const isFocused = state.index === index;\n\n          if (unmountOnBlur && !isFocused) {\n            return null;\n          }\n\n          if (lazy && !loaded.includes(route.key) && !isFocused) {\n            // Don't render a lazy screen if we've never navigated to it\n            return null;\n          }\n\n          const {\n            header = ({ layout, options }: DrawerHeaderProps) => (\n              <Header\n                {...options}\n                layout={layout}\n                title={getHeaderTitle(options, route.name)}\n                headerLeft={\n                  options.headerLeft ??\n                  ((props) => <DrawerToggleButton {...props} />)\n                }\n              />\n            ),\n            sceneContainerStyle,\n          } = descriptor.options;\n\n          return (\n            <MaybeScreen\n              key={route.key}\n              style={[StyleSheet.absoluteFill, { zIndex: isFocused ? 0 : -1 }]}\n              visible={isFocused}\n              enabled={detachInactiveScreens}\n            >\n              <Screen\n                focused={isFocused}\n                route={descriptor.route}\n                navigation={descriptor.navigation}\n                headerShown={descriptor.options.headerShown}\n                headerTransparent={descriptor.options.headerTransparent}\n                headerStatusBarHeight={descriptor.options.headerStatusBarHeight}\n                header={header({\n                  layout: dimensions,\n                  route: descriptor.route,\n                  navigation:\n                    descriptor.navigation as DrawerNavigationProp<ParamListBase>,\n                  options: descriptor.options,\n                })}\n                style={sceneContainerStyle}\n              >\n                {descriptor.render()}\n              </Screen>\n            </MaybeScreen>\n          );\n        })}\n      </MaybeScreenContainer>\n    );\n  };\n\n  return (\n    <DrawerStatusContext.Provider value={drawerStatus}>\n      <Drawer\n        open={drawerStatus !== 'closed'}\n        onOpen={handleDrawerOpen}\n        onClose={handleDrawerClose}\n        gestureHandlerProps={gestureHandlerProps}\n        swipeEnabled={swipeEnabled}\n        swipeEdgeWidth={swipeEdgeWidth}\n        swipeVelocityThreshold={500}\n        swipeDistanceThreshold={swipeMinDistance}\n        hideStatusBarOnOpen={drawerHideStatusBarOnOpen}\n        statusBarAnimation={drawerStatusBarAnimation}\n        keyboardDismissMode={keyboardDismissMode}\n        drawerType={drawerType}\n        drawerPosition={drawerPosition}\n        drawerStyle={[\n          {\n            width: getDefaultDrawerWidth(dimensions),\n            backgroundColor: colors.card,\n          },\n          drawerType === 'permanent' &&\n            (drawerPosition === 'left'\n              ? {\n                  borderRightColor: colors.border,\n                  borderRightWidth: StyleSheet.hairlineWidth,\n                }\n              : {\n                  borderLeftColor: colors.border,\n                  borderLeftWidth: StyleSheet.hairlineWidth,\n                }),\n          drawerStyle,\n        ]}\n        overlayStyle={{ backgroundColor: overlayColor }}\n        renderDrawerContent={renderDrawerContent}\n        renderSceneContent={renderSceneContent}\n        dimensions={dimensions}\n      />\n    </DrawerStatusContext.Provider>\n  );\n}\n\nexport default function DrawerView({ navigation, ...rest }: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <GestureHandlerWrapper style={styles.content}>\n        <DrawerViewBase navigation={navigation} {...rest} />\n      </GestureHandlerWrapper>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}