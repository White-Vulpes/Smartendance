{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";export function resolve(styleProp,cleanedProps){if(styleProp){return StyleSheet?[styleProp,cleanedProps]:styleProp[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]?Object.assign.apply(Object,[{}].concat(_toConsumableArray(styleProp),[cleanedProps])):_extends({},styleProp,cleanedProps);}else{return cleanedProps;}}","map":{"version":3,"sources":["resolve.ts"],"names":["StyleSheet","styleProp","Symbol","Object"],"mappings":"+LAGA,MAAO,SAAA,QAAA,CAAA,SAAA,CAAA,YAAA,CAA6D,CAClE,GAAA,SAAA,CAAe,CACb,MAAOA,WAAU,CACb,CAAA,SAAA,CADa,YACb,CADa,CAGfC,SAAS,CAAA,MAAA,OAAA,GAAA,UAAA,CAACC,MAAM,CAAP,QAAA,CAATD,YAAS,CAATA,CACEE,MAAM,CAANA,MAAAA,OAAAA,MAAM,EAANA,EAAM,4BAANA,SAAM,GADRF,YACQ,GADRA,CAEEE,SAAAA,EAAAA,CAAAA,SAAAA,CALJ,YAKIA,CALJ,CADF,CAAA,IAOO,CACL,MAAA,aAAA,CAEH,CAAA","sourcesContent":["import { StyleSheet } from 'react-native';\n\n// Kept in separate file, to avoid name collision with Symbol element\nexport function resolve<T>(styleProp: Iterable<T>, cleanedProps: T) {\n  if (styleProp) {\n    return StyleSheet\n      ? [styleProp, cleanedProps]\n      : // Compatibility for arrays of styles in plain react web\n      styleProp[Symbol.iterator]\n      ? Object.assign({}, ...styleProp, cleanedProps)\n      : Object.assign({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}