{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import EnsureSingleNavigator from\"./EnsureSingleNavigator\";import NavigationStateContext from\"./NavigationStateContext\";import StaticContainer from\"./StaticContainer\";import useOptionsGetters from\"./useOptionsGetters\";export default function SceneView(_ref){var screen=_ref.screen,route=_ref.route,navigation=_ref.navigation,routeState=_ref.routeState,getState=_ref.getState,setState=_ref.setState,options=_ref.options,clearOptions=_ref.clearOptions;var navigatorKeyRef=React.useRef();var getKey=React.useCallback(function(){return navigatorKeyRef.current;},[]);var _useOptionsGetters=useOptionsGetters({key:route.key,options:options,navigation:navigation}),addOptionsGetter=_useOptionsGetters.addOptionsGetter;var setKey=React.useCallback(function(key){navigatorKeyRef.current=key;},[]);var getCurrentState=React.useCallback(function(){var state=getState();var currentRoute=state.routes.find(function(r){return r.key===route.key;});return currentRoute?currentRoute.state:undefined;},[getState,route.key]);var setCurrentState=React.useCallback(function(child){var state=getState();setState(_objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(r){return r.key===route.key?_objectSpread(_objectSpread({},r),{},{state:child}):r;})}));},[getState,route.key,setState]);var isInitialRef=React.useRef(true);React.useEffect(function(){isInitialRef.current=false;});React.useEffect(function(){return clearOptions;},[]);var getIsInitial=React.useCallback(function(){return isInitialRef.current;},[]);var context=React.useMemo(function(){return{state:routeState,getState:getCurrentState,setState:setCurrentState,getKey:getKey,setKey:setKey,getIsInitial:getIsInitial,addOptionsGetter:addOptionsGetter};},[routeState,getCurrentState,setCurrentState,getKey,setKey,getIsInitial,addOptionsGetter]);var ScreenComponent=screen.getComponent?screen.getComponent():screen.component;return React.createElement(NavigationStateContext.Provider,{value:context},React.createElement(EnsureSingleNavigator,null,React.createElement(StaticContainer,{name:screen.name,render:ScreenComponent||screen.children,navigation:navigation,route:route},ScreenComponent!==undefined?React.createElement(ScreenComponent,{navigation:navigation,route:route}):screen.children!==undefined?screen.children({navigation:navigation,route:route}):null)));}","map":{"version":3,"sources":["SceneView.tsx"],"names":["clearOptions","navigatorKeyRef","React","getKey","addOptionsGetter","useOptionsGetters","key","route","options","navigation","setKey","getCurrentState","state","getState","currentRoute","r","setCurrentState","child","setState","routes","isInitialRef","getIsInitial","context","ScreenComponent","screen"],"mappings":"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","sourcesContent":["import type {\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationStateContext from './NavigationStateContext';\nimport StaticContainer from './StaticContainer';\nimport type { NavigationProp, RouteConfigComponent } from './types';\nimport useOptionsGetters from './useOptionsGetters';\n\ntype Props<State extends NavigationState, ScreenOptions extends {}> = {\n  screen: RouteConfigComponent<ParamListBase, string> & { name: string };\n  navigation: NavigationProp<\n    ParamListBase,\n    string,\n    string | undefined,\n    State,\n    ScreenOptions\n  >;\n  route: Route<string>;\n  routeState: NavigationState | PartialState<NavigationState> | undefined;\n  getState: () => State;\n  setState: (state: State) => void;\n  options: object;\n  clearOptions: () => void;\n};\n\n/**\n * Component which takes care of rendering the screen for a route.\n * It provides all required contexts and applies optimizations when applicable.\n */\nexport default function SceneView<\n  State extends NavigationState,\n  ScreenOptions extends {}\n>({\n  screen,\n  route,\n  navigation,\n  routeState,\n  getState,\n  setState,\n  options,\n  clearOptions,\n}: Props<State, ScreenOptions>) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n  const { addOptionsGetter } = useOptionsGetters({\n    key: route.key,\n    options,\n    navigation,\n  });\n\n  const setKey = React.useCallback((key: string) => {\n    navigatorKeyRef.current = key;\n  }, []);\n\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find((r) => r.key === route.key);\n\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n\n  const setCurrentState = React.useCallback(\n    (child: NavigationState | PartialState<NavigationState> | undefined) => {\n      const state = getState();\n\n      setState({\n        ...state,\n        routes: state.routes.map((r) =>\n          r.key === route.key ? { ...r, state: child } : r\n        ),\n      });\n    },\n    [getState, route.key, setState]\n  );\n\n  const isInitialRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isInitialRef.current = false;\n  });\n\n  // Clear options set by this screen when it is unmounted\n  React.useEffect(() => {\n    return clearOptions;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n  const context = React.useMemo(\n    () => ({\n      state: routeState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    }),\n    [\n      routeState,\n      getCurrentState,\n      setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    ]\n  );\n\n  const ScreenComponent = screen.getComponent\n    ? screen.getComponent()\n    : screen.component;\n\n  return (\n    <NavigationStateContext.Provider value={context}>\n      <EnsureSingleNavigator>\n        <StaticContainer\n          name={screen.name}\n          render={ScreenComponent || screen.children}\n          navigation={navigation}\n          route={route}\n        >\n          {ScreenComponent !== undefined ? (\n            <ScreenComponent navigation={navigation} route={route} />\n          ) : screen.children !== undefined ? (\n            screen.children({ navigation, route })\n          ) : null}\n        </StaticContainer>\n      </EnsureSingleNavigator>\n    </NavigationStateContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}