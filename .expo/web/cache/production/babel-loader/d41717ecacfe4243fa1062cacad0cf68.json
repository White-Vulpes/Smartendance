{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"visible\",\"children\",\"style\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";var FAR_FAR_AWAY=30000;export default function ResourceSavingScene(_ref){var visible=_ref.visible,children=_ref.children,style=_ref.style,rest=_objectWithoutProperties(_ref,_excluded);if(Platform.OS==='web'){return React.createElement(View,_extends({hidden:!visible,style:[{display:visible?'flex':'none'},styles.container,style],pointerEvents:visible?'auto':'none'},rest),children);}return React.createElement(View,{style:[styles.container,style],pointerEvents:visible?'auto':'none'},React.createElement(View,{collapsable:false,removeClippedSubviews:Platform.OS==='ios'||Platform.OS==='macos'?!visible:true,pointerEvents:visible?'auto':'none',style:visible?styles.attached:styles.detached},children));}var styles=StyleSheet.create({container:{flex:1,overflow:'hidden'},attached:{flex:1},detached:{flex:1,top:FAR_FAR_AWAY}});","map":{"version":3,"sources":["ResourceSavingView.tsx"],"names":["FAR_FAR_AWAY","rest","Platform","display","visible","styles","detached","container","flex","overflow","attached","top"],"mappings":"yZAAA,MAAO,GAAP,MAAA,KAAA,OAAA,C,mLASA,GAAMA,aAAY,CAAlB,KAAA,CAEA,cAAe,SAAA,oBAAA,CAAA,IAAA,CAKL,CALkC,GAAA,QAAA,CAKlC,IALkC,CAAA,OAAA,CAAA,QAAA,CAKlC,IALkC,CAAA,QAAA,CAAA,KAAA,CAKlC,IALkC,CAAA,KAAA,CAIvCC,IAJuC,0BAKlC,IALkC,YAM1C,GAAIC,QAAQ,CAARA,EAAAA,GAAJ,KAAA,CAA2B,CACzB,MACE,MAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAEE,MAAM,CAAE,CAFV,OAAA,CAGE,KAAK,CAAE,CACL,CAAEC,OAAO,CAAEC,OAAO,CAAA,MAAA,CAAY,MAA9B,CADK,CAELC,MAAM,CAFD,SAAA,CAHT,KAGS,CAHT,CAQE,aAAa,CAAED,OAAO,CAAA,MAAA,CAAY,MARpC,CAAA,CAAA,IAAA,CAAA,CADF,QACE,CADF,CAeD,CAED,MACE,MAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,KAAK,CAAE,CAACC,MAAM,CAAP,SAAA,CADT,KACS,CADT,CAGE,aAAa,CAAED,OAAO,CAAA,MAAA,CAAY,MAHpC,CAAA,CAKE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,WAAW,CADb,KAAA,CAEE,qBAAqB,CAGnBF,QAAQ,CAARA,EAAAA,GAAAA,KAAAA,EAAyBA,QAAQ,CAARA,EAAAA,GAAzBA,OAAAA,CAAmD,CAAnDA,OAAAA,CALJ,IAAA,CAOE,aAAa,CAAEE,OAAO,CAAA,MAAA,CAPxB,MAAA,CAQE,KAAK,CAAEA,OAAO,CAAGC,MAAM,CAAT,QAAA,CAAqBA,MAAM,CAACC,QAR5C,CAAA,CANJ,QAMI,CALF,CADF,CAoBD,CAED,GAAMD,OAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BE,SAAS,CAAE,CACTC,IAAI,CADK,CAAA,CAETC,QAAQ,CAAE,QAFD,CADoB,CAK/BC,QAAQ,CAAE,CACRF,IAAI,CAAE,CADE,CALqB,CAQ/BF,QAAQ,CAAE,CACRE,IAAI,CADI,CAAA,CAERG,GAAG,CAAEX,YAFG,CARqB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\ntype Props = {\n  visible: boolean;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default function ResourceSavingScene({\n  visible,\n  children,\n  style,\n  ...rest\n}: Props) {\n  if (Platform.OS === 'web') {\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!visible}\n        style={[\n          { display: visible ? 'flex' : 'none' },\n          styles.container,\n          style,\n        ]}\n        pointerEvents={visible ? 'auto' : 'none'}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={[styles.container, style]}\n      // box-none doesn't seem to work properly on Android\n      pointerEvents={visible ? 'auto' : 'none'}\n    >\n      <View\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS & macOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' || Platform.OS === 'macos' ? !visible : true\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n        style={visible ? styles.attached : styles.detached}\n      >\n        {children}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}