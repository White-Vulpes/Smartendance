{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"enabled\"],_excluded2=[\"visible\",\"children\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{ResourceSavingView}from'@react-navigation/elements';import*as React from'react';import View from\"react-native-web/dist/exports/View\";var Screens;try{Screens=require('react-native-screens');}catch(e){}export var MaybeScreenContainer=function MaybeScreenContainer(_ref){var _Screens,_Screens$screensEnabl;var enabled=_ref.enabled,rest=_objectWithoutProperties(_ref,_excluded);if((_Screens=Screens)!==null&&_Screens!==void 0&&(_Screens$screensEnabl=_Screens.screensEnabled)!==null&&_Screens$screensEnabl!==void 0&&_Screens$screensEnabl.call(_Screens)){return React.createElement(Screens.ScreenContainer,_extends({enabled:enabled},rest));}return React.createElement(View,rest);};export function MaybeScreen(_ref2){var _Screens2,_Screens2$screensEnab;var visible=_ref2.visible,children=_ref2.children,rest=_objectWithoutProperties(_ref2,_excluded2);if((_Screens2=Screens)!==null&&_Screens2!==void 0&&(_Screens2$screensEnab=_Screens2.screensEnabled)!==null&&_Screens2$screensEnab!==void 0&&_Screens2$screensEnab.call(_Screens2)){return React.createElement(Screens.Screen,_extends({activityState:visible?2:0},rest),children);}return React.createElement(ResourceSavingView,_extends({visible:visible},rest),children);}","map":{"version":3,"sources":["ScreenFallback.tsx"],"names":["Screens","require","MaybeScreenContainer","rest","enabled","visible"],"mappings":"waAAA,OAAA,kBAAA,KAAA,4BAAA,CACA,MAAO,GAAP,MAAA,KAAA,OAAA,C,qDAUA,GAAA,QAAA,CAEA,GAAI,CACFA,OAAO,CAAGC,OAAO,CAAjBD,sBAAiB,CAAjBA,CADF,CAEE,MAAA,CAAA,CAAU,CAEX,CAED,MAAO,IAAME,qBAAoB,CAAG,QAAvBA,qBAAuB,CAAA,IAAA,CAO9B,CAAA,GAAA,SAAA,CAAA,qBAAA,CAP+B,GAAA,QAAA,CAO/B,IAP+B,CAAA,OAAA,CAEhCC,IAFgC,0BAO/B,IAP+B,YAQnC,GAAA,CAAA,QAAA,CAAA,OAAA,IAAA,IAAA,EAAA,QAAA,GAAA,IAAA,EAAA,EAAA,CAAA,qBAAA,CAAIH,QAAAA,CAAJ,cAAA,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,EAAIA,qBAAAA,CAAAA,IAAAA,CAAJ,QAAIA,CAAJ,CAAiC,CAC/B,MAAO,MAAA,CAAA,aAAA,CAAC,OAAD,CAAA,eAAA,CAAA,QAAA,CAAA,CAAyB,OAAO,CAAEI,OAAlC,CAAA,CAAP,IAAO,CAAA,CAAP,CACD,CAED,MAAO,MAAA,CAAA,aAAA,CAAA,IAAA,CAAP,IAAO,CAAP,CAZK,CAAA,CAeP,MAAO,SAAA,YAAA,CAAA,KAAA,CAA4D,CAAA,GAAA,UAAA,CAAA,qBAAA,CAAvC,GAAA,QAAA,CAAuC,KAAvC,CAAA,OAAA,CAAA,QAAA,CAAuC,KAAvC,CAAA,QAAA,CAAwBD,IAAxB,0BAAuC,KAAvC,aAC1B,GAAA,CAAA,SAAA,CAAA,OAAA,IAAA,IAAA,EAAA,SAAA,GAAA,IAAA,EAAA,EAAA,CAAA,qBAAA,CAAIH,SAAAA,CAAJ,cAAA,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,EAAIA,qBAAAA,CAAAA,IAAAA,CAAJ,SAAIA,CAAJ,CAAiC,CAC/B,MACE,MAAA,CAAA,aAAA,CAAC,OAAD,CAAA,MAAA,CAAA,QAAA,CAAA,CAAgB,aAAa,CAAEK,OAAO,CAAA,CAAA,CAAO,CAA7C,CAAA,CAAA,IAAA,CAAA,CADF,QACE,CADF,CAKD,CAED,MACE,MAAA,CAAA,aAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,CAAoB,OAAO,CAAEA,OAA7B,CAAA,CAAA,IAAA,CAAA,CADF,QACE,CADF,CAKD","sourcesContent":["import { ResourceSavingView } from '@react-navigation/elements';\nimport * as React from 'react';\nimport { StyleProp, View, ViewProps, ViewStyle } from 'react-native';\n\ntype Props = {\n  visible: boolean;\n  children: React.ReactNode;\n  enabled: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  hasTwoStates: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Screens?.screensEnabled?.()) {\n    return <Screens.ScreenContainer enabled={enabled} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport function MaybeScreen({ visible, children, ...rest }: Props) {\n  if (Screens?.screensEnabled?.()) {\n    return (\n      <Screens.Screen activityState={visible ? 2 : 0} {...rest}>\n        {children}\n      </Screens.Screen>\n    );\n  }\n\n  return (\n    <ResourceSavingView visible={visible} {...rest}>\n      {children}\n    </ResourceSavingView>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}