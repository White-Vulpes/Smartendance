{"ast":null,"code":"import*as React from'react';import View from\"react-native-web/dist/exports/View\";var CSSTransitions={WebkitTransition:'webkitTransitionEnd',Transition:'transitionEnd',MozTransition:'transitionend',MSTransition:'msTransitionEnd',OTransition:'oTransitionEnd'};export function NativeSafeAreaProvider(_ref){var children=_ref.children,style=_ref.style,onInsetsChange=_ref.onInsetsChange;React.useEffect(function(){if(typeof document==='undefined'){return;}var element=createContextElement();document.body.appendChild(element);var onEnd=function onEnd(){var _window$getComputedSt=window.getComputedStyle(element),paddingTop=_window$getComputedSt.paddingTop,paddingBottom=_window$getComputedSt.paddingBottom,paddingLeft=_window$getComputedSt.paddingLeft,paddingRight=_window$getComputedSt.paddingRight;var insets={top:paddingTop?parseInt(paddingTop,10):0,bottom:paddingBottom?parseInt(paddingBottom,10):0,left:paddingLeft?parseInt(paddingLeft,10):0,right:paddingRight?parseInt(paddingRight,10):0};var frame={x:0,y:0,width:document.documentElement.offsetWidth,height:document.documentElement.offsetHeight};onInsetsChange({nativeEvent:{insets:insets,frame:frame}});};element.addEventListener(getSupportedTransitionEvent(),onEnd);onEnd();return function(){document.body.removeChild(element);element.removeEventListener(getSupportedTransitionEvent(),onEnd);};},[onInsetsChange]);return React.createElement(View,{style:style},children);}var _supportedTransitionEvent=null;function getSupportedTransitionEvent(){if(_supportedTransitionEvent!=null){return _supportedTransitionEvent;}var element=document.createElement('invalidtype');_supportedTransitionEvent=CSSTransitions.Transition;for(var key in CSSTransitions){if(element.style[key]!==undefined){_supportedTransitionEvent=CSSTransitions[key];break;}}return _supportedTransitionEvent;}var _supportedEnv=null;function getSupportedEnv(){if(_supportedEnv!==null){return _supportedEnv;}var _window=window,CSS=_window.CSS;if(CSS&&CSS.supports&&CSS.supports('top: constant(safe-area-inset-top)')){_supportedEnv='constant';}else{_supportedEnv='env';}return _supportedEnv;}function getInset(side){return getSupportedEnv()+\"(safe-area-inset-\"+side+\")\";}function createContextElement(){var element=document.createElement('div');var style=element.style;style.position='fixed';style.left='0';style.top='0';style.width='0';style.height='0';style.zIndex='-1';style.overflow='hidden';style.visibility='hidden';style.transitionDuration='0.05s';style.transitionProperty='padding';style.transitionDelay='0s';style.paddingTop=getInset('top');style.paddingBottom=getInset('bottom');style.paddingLeft=getInset('left');style.paddingRight=getInset('right');return element;}","map":{"version":3,"sources":["NativeSafeAreaProvider.web.tsx"],"names":["CSSTransitions","WebkitTransition","Transition","MozTransition","MSTransition","OTransition","onInsetsChange","React","element","createContextElement","document","onEnd","paddingRight","window","insets","top","paddingTop","parseInt","bottom","paddingBottom","left","paddingLeft","right","frame","x","y","width","height","offsetHeight","nativeEvent","getSupportedTransitionEvent","style","_supportedTransitionEvent","_supportedEnv","CSS","getSupportedEnv","getInset"],"mappings":"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","sourcesContent":["/* eslint-env browser */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport type { NativeSafeAreaProviderProps } from './SafeArea.types';\n\n/**\n * TODO:\n * Currently insets and frame are based on the window and are not\n * relative to the provider view. This is inconsistent with iOS and Android.\n * However in most cases if the provider view covers the screen this is not\n * an issue.\n */\n\nconst CSSTransitions: Record<string, string> = {\n  WebkitTransition: 'webkitTransitionEnd',\n  Transition: 'transitionEnd',\n  MozTransition: 'transitionend',\n  MSTransition: 'msTransitionEnd',\n  OTransition: 'oTransitionEnd',\n};\n\nexport function NativeSafeAreaProvider({\n  children,\n  style,\n  onInsetsChange,\n}: NativeSafeAreaProviderProps) {\n  React.useEffect(() => {\n    // Skip for SSR.\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    const element = createContextElement();\n    document.body.appendChild(element);\n    const onEnd = () => {\n      const { paddingTop, paddingBottom, paddingLeft, paddingRight } =\n        window.getComputedStyle(element);\n\n      const insets = {\n        top: paddingTop ? parseInt(paddingTop, 10) : 0,\n        bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n        left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n        right: paddingRight ? parseInt(paddingRight, 10) : 0,\n      };\n      const frame = {\n        x: 0,\n        y: 0,\n        width: document.documentElement.offsetWidth,\n        height: document.documentElement.offsetHeight,\n      };\n      // @ts-ignore: missing properties\n      onInsetsChange({ nativeEvent: { insets, frame } });\n    };\n    element.addEventListener(getSupportedTransitionEvent(), onEnd);\n    onEnd();\n    return () => {\n      document.body.removeChild(element);\n      element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n    };\n  }, [onInsetsChange]);\n\n  return <View style={style}>{children}</View>;\n}\n\nlet _supportedTransitionEvent: string | null | undefined = null;\nfunction getSupportedTransitionEvent(): string {\n  if (_supportedTransitionEvent != null) {\n    return _supportedTransitionEvent;\n  }\n  const element = document.createElement('invalidtype');\n\n  _supportedTransitionEvent = CSSTransitions.Transition;\n  for (const key in CSSTransitions) {\n    if (element.style[key as keyof CSSStyleDeclaration] !== undefined) {\n      _supportedTransitionEvent = CSSTransitions[key];\n      break;\n    }\n  }\n  return _supportedTransitionEvent as string;\n}\n\ntype CssEnv = 'constant' | 'env';\n\nlet _supportedEnv: CssEnv | null = null;\nfunction getSupportedEnv(): CssEnv {\n  if (_supportedEnv !== null) {\n    return _supportedEnv;\n  }\n  const { CSS } = window;\n  if (\n    CSS &&\n    CSS.supports &&\n    CSS.supports('top: constant(safe-area-inset-top)')\n  ) {\n    _supportedEnv = 'constant';\n  } else {\n    _supportedEnv = 'env';\n  }\n  return _supportedEnv;\n}\n\nfunction getInset(side: string): string {\n  return `${getSupportedEnv()}(safe-area-inset-${side})`;\n}\n\nfunction createContextElement(): HTMLElement {\n  const element = document.createElement('div');\n  const { style } = element;\n  style.position = 'fixed';\n  style.left = '0';\n  style.top = '0';\n  style.width = '0';\n  style.height = '0';\n  style.zIndex = '-1';\n  style.overflow = 'hidden';\n  style.visibility = 'hidden';\n  // Bacon: Anything faster than this and the callback will be invoked too early with the wrong insets\n  style.transitionDuration = '0.05s';\n  style.transitionProperty = 'padding';\n  style.transitionDelay = '0s';\n  style.paddingTop = getInset('top');\n  style.paddingBottom = getInset('bottom');\n  style.paddingLeft = getInset('left');\n  style.paddingRight = getInset('right');\n  return element;\n}\n"]},"metadata":{},"sourceType":"module"}